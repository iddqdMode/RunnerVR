ghtColor1_15;
  lightColor1_15 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_16;
  lightColor2_16 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_17;
  lightColor3_17 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_18;
  lightAttenSq_18 = unity_4LightAtten0;
  highp vec3 pos_19;
  pos_19 = pos_WS_1;
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosX0 - pos_19.x);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosY0 - pos_19.y);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosZ0 - pos_19.z);
  highp vec4 tmpvar_23;
  tmpvar_23 = (((tmpvar_20 * tmpvar_20) + (tmpvar_21 * tmpvar_21)) + (tmpvar_22 * tmpvar_22));
  highp vec4 tmpvar_24;
  tmpvar_24 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_20 * tmpvar_13.x) + (tmpvar_21 * tmpvar_13.y)) + (tmpvar_22 * tmpvar_13.z))
   * 
    inversesqrt(tmpvar_23)
  )) * (1.0/((1.0 + 
    (tmpvar_23 * lightAttenSq_18)
  ))));
  highp vec3 tmpvar_25;
  tmpvar_25 = (((
    (lightColor0_14 * tmpvar_24.x)
   + 
    (lightColor1_15 * tmpvar_24.y)
  ) + (lightColor2_16 * tmpvar_24.z)) + (lightColor3_17 * tmpvar_24.w));
  tmpvar_4.xyz = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_26;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_2.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  highp vec3 lightColor0_14;
  lightColor0_14 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_15;
  lightColor1_15 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_16;
  lightColor2_16 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_17;
  lightColor3_17 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_18;
  lightAttenSq_18 = unity_4LightAtten0;
  highp vec3 pos_19;
  pos_19 = pos_WS_1;
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosX0 - pos_19.x);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosY0 - pos_19.y);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosZ0 - pos_19.z);
  highp vec4 tmpvar_23;
  tmpvar_23 = (((tmpvar_20 * tmpvar_20) + (tmpvar_21 * tmpvar_21)) + (tmpvar_22 * tmpvar_22));
  highp vec4 tmpvar_24;
  tmpvar_24 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_20 * tmpvar_13.x) + (tmpvar_21 * tmpvar_13.y)) + (tmpvar_22 * tmpvar_13.z))
   * 
    inversesqrt(tmpvar_23)
  )) * (1.0/((1.0 + 
    (tmpvar_23 * lightAttenSq_18)
  ))));
  highp vec3 tmpvar_25;
  tmpvar_25 = (((
    (lightColor0_14 * tmpvar_24.x)
   + 
    (lightColor1_15 * tmpvar_24.y)
  ) + (lightColor2_16 * tmpvar_24.z)) + (lightColor3_17 * tmpvar_24.w));
  tmpvar_4.xyz = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_26;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_2.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  highp vec3 lightColor0_14;
  lightColor0_14 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_15;
  lightColor1_15 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_16;
  lightColor2_16 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_17;
  lightColor3_17 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_18;
  lightAttenSq_18 = unity_4LightAtten0;
  highp vec3 pos_19;
  pos_19 = pos_WS_1;
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosX0 - pos_19.x);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosY0 - pos_19.y);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosZ0 - pos_19.z);
  highp vec4 tmpvar_23;
  tmpvar_23 = (((tmpvar_20 * tmpvar_20) + (tmpvar_21 * tmpvar_21)) + (tmpvar_22 * tmpvar_22));
  highp vec4 tmpvar_24;
  tmpvar_24 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_20 * tmpvar_13.x) + (tmpvar_21 * tmpvar_13.y)) + (tmpvar_22 * tmpvar_13.z))
   * 
    inversesqrt(tmpvar_23)
  )) * (1.0/((1.0 + 
    (tmpvar_23 * lightAttenSq_18)
  ))));
  highp vec3 tmpvar_25;
  tmpvar_25 = (((
    (lightColor0_14 * tmpvar_24.x)
   + 
    (lightColor1_15 * tmpvar_24.y)
  ) + (lightColor2_16 * tmpvar_24.z)) + (lightColor3_17 * tmpvar_24.w));
  tmpvar_4.xyz = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_26;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_2.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  highp vec3 lightColor0_14;
  lightColor0_14 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_15;
  lightColor1_15 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_16;
  lightColor2_16 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_17;
  lightColor3_17 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_18;
  lightAttenSq_18 = unity_4LightAtten0;
  highp vec3 pos_19;
  pos_19 = pos_WS_1;
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosX0 - pos_19.x);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosY0 - pos_19.y);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosZ0 - pos_19.z);
  highp vec4 tmpvar_23;
  tmpvar_23 = (((tmpvar_20 * tmpvar_20) + (tmpvar_21 * tmpvar_21)) + (tmpvar_22 * tmpvar_22));
  highp vec4 tmpvar_24;
  tmpvar_24 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_20 * tmpvar_13.x) + (tmpvar_21 * tmpvar_13.y)) + (tmpvar_22 * tmpvar_13.z))
   * 
    inversesqrt(tmpvar_23)
  )) * (1.0/((1.0 + 
    (tmpvar_23 * lightAttenSq_18)
  ))));
  highp vec3 tmpvar_25;
  tmpvar_25 = (((
    (lightColor0_14 * tmpvar_24.x)
   + 
    (lightColor1_15 * tmpvar_24.y)
  ) + (lightColor2_16 * tmpvar_24.z)) + (lightColor3_17 * tmpvar_24.w));
  tmpvar_4.xyz = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_26;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_4.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_World2Shadow[0] * cse_13);
  tmpvar_5 = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_4.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_World2Shadow[0] * cse_13);
  tmpvar_5 = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_3.w = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_4 = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD7 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * retColor_2.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_3.w = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_4 = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD7 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_3.w = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_4 = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD7 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * retColor_2.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_3.w = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_4 = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD7 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_4.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_World2Shadow[0] * cse_13);
  tmpvar_5 = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * retColor_2.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_4.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_World2Shadow[0] * cse_13);
  tmpvar_5 = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_4.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_World2Shadow[0] * cse_13);
  tmpvar_5 = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * retColor_2.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_4.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_World2Shadow[0] * cse_13);
  tmpvar_5 = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize((tmpvar_11 * _glesNormal));
  tmpvar_3 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_12, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize((tmpvar_11 * _glesNormal));
  tmpvar_3 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_12, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize((tmpvar_11 * _glesNormal));
  tmpvar_3 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_12, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize((tmpvar_11 * _glesNormal));
  tmpvar_3 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_12, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_3 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_3 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp vec3 lightColor0_15;
  lightColor0_15 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_16;
  lightColor1_16 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_17;
  lightColor2_17 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_18;
  lightColor3_18 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_19;
  lightAttenSq_19 = unity_4LightAtten0;
  highp vec3 pos_20;
  pos_20 = pos_WS_1;
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosX0 - pos_20.x);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosY0 - pos_20.y);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosZ0 - pos_20.z);
  highp vec4 tmpvar_24;
  tmpvar_24 = (((tmpvar_21 * tmpvar_21) + (tmpvar_22 * tmpvar_22)) + (tmpvar_23 * tmpvar_23));
  highp vec4 tmpvar_25;
  tmpvar_25 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_21 * tmpvar_14.x) + (tmpvar_22 * tmpvar_14.y)) + (tmpvar_23 * tmpvar_14.z))
   * 
    inversesqrt(tmpvar_24)
  )) * (1.0/((1.0 + 
    (tmpvar_24 * lightAttenSq_19)
  ))));
  highp vec3 tmpvar_26;
  tmpvar_26 = (((
    (lightColor0_15 * tmpvar_25.x)
   + 
    (lightColor1_16 * tmpvar_25.y)
  ) + (lightColor2_17 * tmpvar_25.z)) + (lightColor3_18 * tmpvar_25.w));
  tmpvar_5.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_27;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp vec3 lightColor0_15;
  lightColor0_15 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_16;
  lightColor1_16 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_17;
  lightColor2_17 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_18;
  lightColor3_18 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_19;
  lightAttenSq_19 = unity_4LightAtten0;
  highp vec3 pos_20;
  pos_20 = pos_WS_1;
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosX0 - pos_20.x);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosY0 - pos_20.y);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosZ0 - pos_20.z);
  highp vec4 tmpvar_24;
  tmpvar_24 = (((tmpvar_21 * tmpvar_21) + (tmpvar_22 * tmpvar_22)) + (tmpvar_23 * tmpvar_23));
  highp vec4 tmpvar_25;
  tmpvar_25 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_21 * tmpvar_14.x) + (tmpvar_22 * tmpvar_14.y)) + (tmpvar_23 * tmpvar_14.z))
   * 
    inversesqrt(tmpvar_24)
  )) * (1.0/((1.0 + 
    (tmpvar_24 * lightAttenSq_19)
  ))));
  highp vec3 tmpvar_26;
  tmpvar_26 = (((
    (lightColor0_15 * tmpvar_25.x)
   + 
    (lightColor1_16 * tmpvar_25.y)
  ) + (lightColor2_17 * tmpvar_25.z)) + (lightColor3_18 * tmpvar_25.w));
  tmpvar_5.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_27;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp vec3 lightColor0_15;
  lightColor0_15 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_16;
  lightColor1_16 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_17;
  lightColor2_17 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_18;
  lightColor3_18 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_19;
  lightAttenSq_19 = unity_4LightAtten0;
  highp vec3 pos_20;
  pos_20 = pos_WS_1;
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosX0 - pos_20.x);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosY0 - pos_20.y);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosZ0 - pos_20.z);
  highp vec4 tmpvar_24;
  tmpvar_24 = (((tmpvar_21 * tmpvar_21) + (tmpvar_22 * tmpvar_22)) + (tmpvar_23 * tmpvar_23));
  highp vec4 tmpvar_25;
  tmpvar_25 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_21 * tmpvar_14.x) + (tmpvar_22 * tmpvar_14.y)) + (tmpvar_23 * tmpvar_14.z))
   * 
    inversesqrt(tmpvar_24)
  )) * (1.0/((1.0 + 
    (tmpvar_24 * lightAttenSq_19)
  ))));
  highp vec3 tmpvar_26;
  tmpvar_26 = (((
    (lightColor0_15 * tmpvar_25.x)
   + 
    (lightColor1_16 * tmpvar_25.y)
  ) + (lightColor2_17 * tmpvar_25.z)) + (lightColor3_18 * tmpvar_25.w));
  tmpvar_5.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_27;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp vec3 lightColor0_15;
  lightColor0_15 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_16;
  lightColor1_16 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_17;
  lightColor2_17 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_18;
  lightColor3_18 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_19;
  lightAttenSq_19 = unity_4LightAtten0;
  highp vec3 pos_20;
  pos_20 = pos_WS_1;
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosX0 - pos_20.x);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosY0 - pos_20.y);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosZ0 - pos_20.z);
  highp vec4 tmpvar_24;
  tmpvar_24 = (((tmpvar_21 * tmpvar_21) + (tmpvar_22 * tmpvar_22)) + (tmpvar_23 * tmpvar_23));
  highp vec4 tmpvar_25;
  tmpvar_25 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_21 * tmpvar_14.x) + (tmpvar_22 * tmpvar_14.y)) + (tmpvar_23 * tmpvar_14.z))
   * 
    inversesqrt(tmpvar_24)
  )) * (1.0/((1.0 + 
    (tmpvar_24 * lightAttenSq_19)
  ))));
  highp vec3 tmpvar_26;
  tmpvar_26 = (((
    (lightColor0_15 * tmpvar_25.x)
   + 
    (lightColor1_16 * tmpvar_25.y)
  ) + (lightColor2_17 * tmpvar_25.z)) + (lightColor3_18 * tmpvar_25.w));
  tmpvar_5.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_27;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  tmpvar_4 = tmpvar_16;
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_30;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  tmpvar_4 = tmpvar_16;
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_30;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_3 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_3 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_3 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_3 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  tmpvar_4 = tmpvar_16;
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_30;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  tmpvar_4 = tmpvar_16;
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_30;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  tmpvar_4 = tmpvar_16;
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_30;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  tmpvar_4 = tmpvar_16;
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_30;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_5;
  tmpvar_5 = min (0.0, (tmpvar_4.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_6;
  tmpvar_6 = ((tmpvar_5 * tmpvar_5) * 0.001);
  highp float tmpvar_7;
  tmpvar_7 = (max (0.0, (
    abs(tmpvar_4.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_4.x));
  pos_1.zw = tmpvar_4.zw;
  highp vec2 tmpvar_8;
  tmpvar_8.x = (_V_CW_Y_Bend_Size * tmpvar_6);
  tmpvar_8.y = ((_V_CW_X_Bend_Size * tmpvar_6) + ((
    (tmpvar_7 * tmpvar_7)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_4.xy + tmpvar_8);
  highp vec2 tmpvar_9;
  tmpvar_9 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_9;
  highp mat3 tmpvar_10;
  tmpvar_10[0] = _Object2World[0].xyz;
  tmpvar_10[1] = _Object2World[1].xyz;
  tmpvar_10[2] = _Object2World[2].xyz;
  highp float tmpvar_11;
  tmpvar_11 = max (0.0, dot (normalize(
    (tmpvar_10 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_3.w = tmpvar_11;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_5;
  tmpvar_5 = min (0.0, (tmpvar_4.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_6;
  tmpvar_6 = ((tmpvar_5 * tmpvar_5) * 0.001);
  highp float tmpvar_7;
  tmpvar_7 = (max (0.0, (
    abs(tmpvar_4.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_4.x));
  pos_1.zw = tmpvar_4.zw;
  highp vec2 tmpvar_8;
  tmpvar_8.x = (_V_CW_Y_Bend_Size * tmpvar_6);
  tmpvar_8.y = ((_V_CW_X_Bend_Size * tmpvar_6) + ((
    (tmpvar_7 * tmpvar_7)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_4.xy + tmpvar_8);
  highp vec2 tmpvar_9;
  tmpvar_9 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_9;
  highp mat3 tmpvar_10;
  tmpvar_10[0] = _Object2World[0].xyz;
  tmpvar_10[1] = _Object2World[1].xyz;
  tmpvar_10[2] = _Object2World[2].xyz;
  highp float tmpvar_11;
  tmpvar_11 = max (0.0, dot (normalize(
    (tmpvar_10 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_3.w = tmpvar_11;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_5;
  tmpvar_5 = min (0.0, (tmpvar_4.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_6;
  tmpvar_6 = ((tmpvar_5 * tmpvar_5) * 0.001);
  highp float tmpvar_7;
  tmpvar_7 = (max (0.0, (
    abs(tmpvar_4.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_4.x));
  pos_1.zw = tmpvar_4.zw;
  highp vec2 tmpvar_8;
  tmpvar_8.x = (_V_CW_Y_Bend_Size * tmpvar_6);
  tmpvar_8.y = ((_V_CW_X_Bend_Size * tmpvar_6) + ((
    (tmpvar_7 * tmpvar_7)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_4.xy + tmpvar_8);
  highp vec2 tmpvar_9;
  tmpvar_9 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_9;
  highp mat3 tmpvar_10;
  tmpvar_10[0] = _Object2World[0].xyz;
  tmpvar_10[1] = _Object2World[1].xyz;
  tmpvar_10[2] = _Object2World[2].xyz;
  highp float tmpvar_11;
  tmpvar_11 = max (0.0, dot (normalize(
    (tmpvar_10 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_3.w = tmpvar_11;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_5;
  tmpvar_5 = min (0.0, (tmpvar_4.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_6;
  tmpvar_6 = ((tmpvar_5 * tmpvar_5) * 0.001);
  highp float tmpvar_7;
  tmpvar_7 = (max (0.0, (
    abs(tmpvar_4.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_4.x));
  pos_1.zw = tmpvar_4.zw;
  highp vec2 tmpvar_8;
  tmpvar_8.x = (_V_CW_Y_Bend_Size * tmpvar_6);
  tmpvar_8.y = ((_V_CW_X_Bend_Size * tmpvar_6) + ((
    (tmpvar_7 * tmpvar_7)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_4.xy + tmpvar_8);
  highp vec2 tmpvar_9;
  tmpvar_9 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_9;
  highp mat3 tmpvar_10;
  tmpvar_10[0] = _Object2World[0].xyz;
  tmpvar_10[1] = _Object2World[1].xyz;
  tmpvar_10[2] = _Object2World[2].xyz;
  highp float tmpvar_11;
  tmpvar_11 = max (0.0, dot (normalize(
    (tmpvar_10 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_3.w = tmpvar_11;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_3.w = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_4 = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD7 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * tmpvar_6.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_3.w = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_4 = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD7 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * tmpvar_6.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_2.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  highp vec3 lightColor0_14;
  lightColor0_14 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_15;
  lightColor1_15 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_16;
  lightColor2_16 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_17;
  lightColor3_17 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_18;
  lightAttenSq_18 = unity_4LightAtten0;
  highp vec3 pos_19;
  pos_19 = pos_WS_1;
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosX0 - pos_19.x);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosY0 - pos_19.y);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosZ0 - pos_19.z);
  highp vec4 tmpvar_23;
  tmpvar_23 = (((tmpvar_20 * tmpvar_20) + (tmpvar_21 * tmpvar_21)) + (tmpvar_22 * tmpvar_22));
  highp vec4 tmpvar_24;
  tmpvar_24 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_20 * tmpvar_13.x) + (tmpvar_21 * tmpvar_13.y)) + (tmpvar_22 * tmpvar_13.z))
   * 
    inversesqrt(tmpvar_23)
  )) * (1.0/((1.0 + 
    (tmpvar_23 * lightAttenSq_18)
  ))));
  highp vec3 tmpvar_25;
  tmpvar_25 = (((
    (lightColor0_14 * tmpvar_24.x)
   + 
    (lightColor1_15 * tmpvar_24.y)
  ) + (lightColor2_16 * tmpvar_24.z)) + (lightColor3_17 * tmpvar_24.w));
  tmpvar_4.xyz = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_26;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_2.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  highp vec3 lightColor0_14;
  lightColor0_14 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_15;
  lightColor1_15 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_16;
  lightColor2_16 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_17;
  lightColor3_17 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_18;
  lightAttenSq_18 = unity_4LightAtten0;
  highp vec3 pos_19;
  pos_19 = pos_WS_1;
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosX0 - pos_19.x);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosY0 - pos_19.y);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosZ0 - pos_19.z);
  highp vec4 tmpvar_23;
  tmpvar_23 = (((tmpvar_20 * tmpvar_20) + (tmpvar_21 * tmpvar_21)) + (tmpvar_22 * tmpvar_22));
  highp vec4 tmpvar_24;
  tmpvar_24 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_20 * tmpvar_13.x) + (tmpvar_21 * tmpvar_13.y)) + (tmpvar_22 * tmpvar_13.z))
   * 
    inversesqrt(tmpvar_23)
  )) * (1.0/((1.0 + 
    (tmpvar_23 * lightAttenSq_18)
  ))));
  highp vec3 tmpvar_25;
  tmpvar_25 = (((
    (lightColor0_14 * tmpvar_24.x)
   + 
    (lightColor1_15 * tmpvar_24.y)
  ) + (lightColor2_16 * tmpvar_24.z)) + (lightColor3_17 * tmpvar_24.w));
  tmpvar_4.xyz = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_26;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_2.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  highp vec3 lightColor0_14;
  lightColor0_14 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_15;
  lightColor1_15 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_16;
  lightColor2_16 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_17;
  lightColor3_17 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_18;
  lightAttenSq_18 = unity_4LightAtten0;
  highp vec3 pos_19;
  pos_19 = pos_WS_1;
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosX0 - pos_19.x);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosY0 - pos_19.y);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosZ0 - pos_19.z);
  highp vec4 tmpvar_23;
  tmpvar_23 = (((tmpvar_20 * tmpvar_20) + (tmpvar_21 * tmpvar_21)) + (tmpvar_22 * tmpvar_22));
  highp vec4 tmpvar_24;
  tmpvar_24 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_20 * tmpvar_13.x) + (tmpvar_21 * tmpvar_13.y)) + (tmpvar_22 * tmpvar_13.z))
   * 
    inversesqrt(tmpvar_23)
  )) * (1.0/((1.0 + 
    (tmpvar_23 * lightAttenSq_18)
  ))));
  highp vec3 tmpvar_25;
  tmpvar_25 = (((
    (lightColor0_14 * tmpvar_24.x)
   + 
    (lightColor1_15 * tmpvar_24.y)
  ) + (lightColor2_16 * tmpvar_24.z)) + (lightColor3_17 * tmpvar_24.w));
  tmpvar_4.xyz = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_26;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_2.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  highp vec3 lightColor0_14;
  lightColor0_14 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_15;
  lightColor1_15 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_16;
  lightColor2_16 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_17;
  lightColor3_17 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_18;
  lightAttenSq_18 = unity_4LightAtten0;
  highp vec3 pos_19;
  pos_19 = pos_WS_1;
  highp vec4 tmpvar_20;
  tmpvar_20 = (unity_4LightPosX0 - pos_19.x);
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosY0 - pos_19.y);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosZ0 - pos_19.z);
  highp vec4 tmpvar_23;
  tmpvar_23 = (((tmpvar_20 * tmpvar_20) + (tmpvar_21 * tmpvar_21)) + (tmpvar_22 * tmpvar_22));
  highp vec4 tmpvar_24;
  tmpvar_24 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_20 * tmpvar_13.x) + (tmpvar_21 * tmpvar_13.y)) + (tmpvar_22 * tmpvar_13.z))
   * 
    inversesqrt(tmpvar_23)
  )) * (1.0/((1.0 + 
    (tmpvar_23 * lightAttenSq_18)
  ))));
  highp vec3 tmpvar_25;
  tmpvar_25 = (((
    (lightColor0_14 * tmpvar_24.x)
   + 
    (lightColor1_15 * tmpvar_24.y)
  ) + (lightColor2_16 * tmpvar_24.z)) + (lightColor3_17 * tmpvar_24.w));
  tmpvar_4.xyz = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_26;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_4.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_World2Shadow[0] * cse_13);
  tmpvar_5 = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * tmpvar_6.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_4.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_World2Shadow[0] * cse_13);
  tmpvar_5 = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * tmpvar_6.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_3.w = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_4 = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD7 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * tmpvar_6.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_3.w = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_4 = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD7 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * tmpvar_6.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_3.w = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_4 = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD7 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * tmpvar_6.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_3.w = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_4 = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_3;
  xlv_TEXCOORD7 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * tmpvar_6.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_4.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_World2Shadow[0] * cse_13);
  tmpvar_5 = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * tmpvar_6.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
out lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_4.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_World2Shadow[0] * cse_13);
  tmpvar_5 = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * tmpvar_6.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_4.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_World2Shadow[0] * cse_13);
  tmpvar_5 = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * tmpvar_6.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
out lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  highp vec4 cse_13;
  cse_13 = (_Object2World * _glesVertex);
  tmpvar_12 = cse_13.xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_4.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_World2Shadow[0] * cse_13);
  tmpvar_5 = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * tmpvar_6.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize((tmpvar_11 * _glesNormal));
  tmpvar_3 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_12, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize((tmpvar_11 * _glesNormal));
  tmpvar_3 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_12, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize((tmpvar_11 * _glesNormal));
  tmpvar_3 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_12, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_12;
  tmpvar_12 = normalize((tmpvar_11 * _glesNormal));
  tmpvar_3 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (tmpvar_12, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_3 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_3 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp vec3 lightColor0_15;
  lightColor0_15 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_16;
  lightColor1_16 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_17;
  lightColor2_17 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_18;
  lightColor3_18 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_19;
  lightAttenSq_19 = unity_4LightAtten0;
  highp vec3 pos_20;
  pos_20 = pos_WS_1;
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosX0 - pos_20.x);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosY0 - pos_20.y);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosZ0 - pos_20.z);
  highp vec4 tmpvar_24;
  tmpvar_24 = (((tmpvar_21 * tmpvar_21) + (tmpvar_22 * tmpvar_22)) + (tmpvar_23 * tmpvar_23));
  highp vec4 tmpvar_25;
  tmpvar_25 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_21 * tmpvar_14.x) + (tmpvar_22 * tmpvar_14.y)) + (tmpvar_23 * tmpvar_14.z))
   * 
    inversesqrt(tmpvar_24)
  )) * (1.0/((1.0 + 
    (tmpvar_24 * lightAttenSq_19)
  ))));
  highp vec3 tmpvar_26;
  tmpvar_26 = (((
    (lightColor0_15 * tmpvar_25.x)
   + 
    (lightColor1_16 * tmpvar_25.y)
  ) + (lightColor2_17 * tmpvar_25.z)) + (lightColor3_18 * tmpvar_25.w));
  tmpvar_5.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_27;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp vec3 lightColor0_15;
  lightColor0_15 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_16;
  lightColor1_16 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_17;
  lightColor2_17 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_18;
  lightColor3_18 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_19;
  lightAttenSq_19 = unity_4LightAtten0;
  highp vec3 pos_20;
  pos_20 = pos_WS_1;
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosX0 - pos_20.x);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosY0 - pos_20.y);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosZ0 - pos_20.z);
  highp vec4 tmpvar_24;
  tmpvar_24 = (((tmpvar_21 * tmpvar_21) + (tmpvar_22 * tmpvar_22)) + (tmpvar_23 * tmpvar_23));
  highp vec4 tmpvar_25;
  tmpvar_25 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_21 * tmpvar_14.x) + (tmpvar_22 * tmpvar_14.y)) + (tmpvar_23 * tmpvar_14.z))
   * 
    inversesqrt(tmpvar_24)
  )) * (1.0/((1.0 + 
    (tmpvar_24 * lightAttenSq_19)
  ))));
  highp vec3 tmpvar_26;
  tmpvar_26 = (((
    (lightColor0_15 * tmpvar_25.x)
   + 
    (lightColor1_16 * tmpvar_25.y)
  ) + (lightColor2_17 * tmpvar_25.z)) + (lightColor3_18 * tmpvar_25.w));
  tmpvar_5.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_27;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp vec3 lightColor0_15;
  lightColor0_15 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_16;
  lightColor1_16 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_17;
  lightColor2_17 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_18;
  lightColor3_18 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_19;
  lightAttenSq_19 = unity_4LightAtten0;
  highp vec3 pos_20;
  pos_20 = pos_WS_1;
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosX0 - pos_20.x);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosY0 - pos_20.y);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosZ0 - pos_20.z);
  highp vec4 tmpvar_24;
  tmpvar_24 = (((tmpvar_21 * tmpvar_21) + (tmpvar_22 * tmpvar_22)) + (tmpvar_23 * tmpvar_23));
  highp vec4 tmpvar_25;
  tmpvar_25 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_21 * tmpvar_14.x) + (tmpvar_22 * tmpvar_14.y)) + (tmpvar_23 * tmpvar_14.z))
   * 
    inversesqrt(tmpvar_24)
  )) * (1.0/((1.0 + 
    (tmpvar_24 * lightAttenSq_19)
  ))));
  highp vec3 tmpvar_26;
  tmpvar_26 = (((
    (lightColor0_15 * tmpvar_25.x)
   + 
    (lightColor1_16 * tmpvar_25.y)
  ) + (lightColor2_17 * tmpvar_25.z)) + (lightColor3_18 * tmpvar_25.w));
  tmpvar_5.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_27;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp vec3 lightColor0_15;
  lightColor0_15 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_16;
  lightColor1_16 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_17;
  lightColor2_17 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_18;
  lightColor3_18 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_19;
  lightAttenSq_19 = unity_4LightAtten0;
  highp vec3 pos_20;
  pos_20 = pos_WS_1;
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosX0 - pos_20.x);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosY0 - pos_20.y);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosZ0 - pos_20.z);
  highp vec4 tmpvar_24;
  tmpvar_24 = (((tmpvar_21 * tmpvar_21) + (tmpvar_22 * tmpvar_22)) + (tmpvar_23 * tmpvar_23));
  highp vec4 tmpvar_25;
  tmpvar_25 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_21 * tmpvar_14.x) + (tmpvar_22 * tmpvar_14.y)) + (tmpvar_23 * tmpvar_14.z))
   * 
    inversesqrt(tmpvar_24)
  )) * (1.0/((1.0 + 
    (tmpvar_24 * lightAttenSq_19)
  ))));
  highp vec3 tmpvar_26;
  tmpvar_26 = (((
    (lightColor0_15 * tmpvar_25.x)
   + 
    (lightColor1_16 * tmpvar_25.y)
  ) + (lightColor2_17 * tmpvar_25.z)) + (lightColor3_18 * tmpvar_25.w));
  tmpvar_5.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_27;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  tmpvar_4 = tmpvar_16;
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_30;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  tmpvar_4 = tmpvar_16;
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_30;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_3 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_3 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_3 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  mediump vec3 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_3 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  tmpvar_4 = tmpvar_16;
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_30;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
out lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  tmpvar_4 = tmpvar_16;
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_30;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  tmpvar_4 = tmpvar_16;
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_30;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_FOG_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
out lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  tmpvar_4 = tmpvar_16;
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_30;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_5.xyz, tmpvar_5.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_5.xyz, tmpvar_5.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_5.xyz, tmpvar_5.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_5.xyz, tmpvar_5.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (normalize(
    (tmpvar_12 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (normalize(
    (tmpvar_12 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  highp vec3 lightColor0_15;
  lightColor0_15 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_16;
  lightColor1_16 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_17;
  lightColor2_17 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_18;
  lightColor3_18 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_19;
  lightAttenSq_19 = unity_4LightAtten0;
  highp vec3 pos_20;
  pos_20 = pos_WS_1;
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosX0 - pos_20.x);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosY0 - pos_20.y);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosZ0 - pos_20.z);
  highp vec4 tmpvar_24;
  tmpvar_24 = (((tmpvar_21 * tmpvar_21) + (tmpvar_22 * tmpvar_22)) + (tmpvar_23 * tmpvar_23));
  highp vec4 tmpvar_25;
  tmpvar_25 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_21 * tmpvar_14.x) + (tmpvar_22 * tmpvar_14.y)) + (tmpvar_23 * tmpvar_14.z))
   * 
    inversesqrt(tmpvar_24)
  )) * (1.0/((1.0 + 
    (tmpvar_24 * lightAttenSq_19)
  ))));
  highp vec3 tmpvar_26;
  tmpvar_26 = (((
    (lightColor0_15 * tmpvar_25.x)
   + 
    (lightColor1_16 * tmpvar_25.y)
  ) + (lightColor2_17 * tmpvar_25.z)) + (lightColor3_18 * tmpvar_25.w));
  tmpvar_5.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_28;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  highp vec3 lightColor0_15;
  lightColor0_15 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_16;
  lightColor1_16 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_17;
  lightColor2_17 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_18;
  lightColor3_18 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_19;
  lightAttenSq_19 = unity_4LightAtten0;
  highp vec3 pos_20;
  pos_20 = pos_WS_1;
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosX0 - pos_20.x);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosY0 - pos_20.y);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosZ0 - pos_20.z);
  highp vec4 tmpvar_24;
  tmpvar_24 = (((tmpvar_21 * tmpvar_21) + (tmpvar_22 * tmpvar_22)) + (tmpvar_23 * tmpvar_23));
  highp vec4 tmpvar_25;
  tmpvar_25 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_21 * tmpvar_14.x) + (tmpvar_22 * tmpvar_14.y)) + (tmpvar_23 * tmpvar_14.z))
   * 
    inversesqrt(tmpvar_24)
  )) * (1.0/((1.0 + 
    (tmpvar_24 * lightAttenSq_19)
  ))));
  highp vec3 tmpvar_26;
  tmpvar_26 = (((
    (lightColor0_15 * tmpvar_25.x)
   + 
    (lightColor1_16 * tmpvar_25.y)
  ) + (lightColor2_17 * tmpvar_25.z)) + (lightColor3_18 * tmpvar_25.w));
  tmpvar_5.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_28;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  highp vec3 lightColor0_15;
  lightColor0_15 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_16;
  lightColor1_16 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_17;
  lightColor2_17 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_18;
  lightColor3_18 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_19;
  lightAttenSq_19 = unity_4LightAtten0;
  highp vec3 pos_20;
  pos_20 = pos_WS_1;
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosX0 - pos_20.x);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosY0 - pos_20.y);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosZ0 - pos_20.z);
  highp vec4 tmpvar_24;
  tmpvar_24 = (((tmpvar_21 * tmpvar_21) + (tmpvar_22 * tmpvar_22)) + (tmpvar_23 * tmpvar_23));
  highp vec4 tmpvar_25;
  tmpvar_25 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_21 * tmpvar_14.x) + (tmpvar_22 * tmpvar_14.y)) + (tmpvar_23 * tmpvar_14.z))
   * 
    inversesqrt(tmpvar_24)
  )) * (1.0/((1.0 + 
    (tmpvar_24 * lightAttenSq_19)
  ))));
  highp vec3 tmpvar_26;
  tmpvar_26 = (((
    (lightColor0_15 * tmpvar_25.x)
   + 
    (lightColor1_16 * tmpvar_25.y)
  ) + (lightColor2_17 * tmpvar_25.z)) + (lightColor3_18 * tmpvar_25.w));
  tmpvar_5.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_28;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  highp vec3 lightColor0_15;
  lightColor0_15 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_16;
  lightColor1_16 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_17;
  lightColor2_17 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_18;
  lightColor3_18 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_19;
  lightAttenSq_19 = unity_4LightAtten0;
  highp vec3 pos_20;
  pos_20 = pos_WS_1;
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosX0 - pos_20.x);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosY0 - pos_20.y);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosZ0 - pos_20.z);
  highp vec4 tmpvar_24;
  tmpvar_24 = (((tmpvar_21 * tmpvar_21) + (tmpvar_22 * tmpvar_22)) + (tmpvar_23 * tmpvar_23));
  highp vec4 tmpvar_25;
  tmpvar_25 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_21 * tmpvar_14.x) + (tmpvar_22 * tmpvar_14.y)) + (tmpvar_23 * tmpvar_14.z))
   * 
    inversesqrt(tmpvar_24)
  )) * (1.0/((1.0 + 
    (tmpvar_24 * lightAttenSq_19)
  ))));
  highp vec3 tmpvar_26;
  tmpvar_26 = (((
    (lightColor0_15 * tmpvar_25.x)
   + 
    (lightColor1_16 * tmpvar_25.y)
  ) + (lightColor2_17 * tmpvar_25.z)) + (lightColor3_18 * tmpvar_25.w));
  tmpvar_5.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_28;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_30;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_31;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_30;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_31;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (normalize(
    (tmpvar_12 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * retColor_2.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (normalize(
    (tmpvar_12 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (normalize(
    (tmpvar_12 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * retColor_2.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (normalize(
    (tmpvar_12 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_30;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_31;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * retColor_2.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_30;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_31;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_30;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_31;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * retColor_2.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_30;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_31;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_4 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_4 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_4 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_4 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_1.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_6 = tmpvar_17;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_1.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_6 = tmpvar_17;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  tmpvar_13 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  tmpvar_5 = tmpvar_15;
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_6.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  tmpvar_13 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  tmpvar_5 = tmpvar_15;
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_6.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  tmpvar_13 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  tmpvar_5 = tmpvar_15;
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_6.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  tmpvar_13 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  tmpvar_5 = tmpvar_15;
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_6.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_2.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_13;
  highp vec3 tmpvar_14;
  highp vec4 cse_15;
  cse_15 = (_Object2World * _glesVertex);
  tmpvar_14 = cse_15.xyz;
  pos_WS_1 = tmpvar_14;
  highp mat3 tmpvar_16;
  tmpvar_16[0] = _Object2World[0].xyz;
  tmpvar_16[1] = _Object2World[1].xyz;
  tmpvar_16[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize((tmpvar_16 * _glesNormal));
  tmpvar_5 = tmpvar_17;
  highp vec3 lightColor0_18;
  lightColor0_18 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_19;
  lightColor1_19 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_20;
  lightColor2_20 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_21;
  lightColor3_21 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_22;
  lightAttenSq_22 = unity_4LightAtten0;
  highp vec3 pos_23;
  pos_23 = pos_WS_1;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosX0 - pos_23.x);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosY0 - pos_23.y);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosZ0 - pos_23.z);
  highp vec4 tmpvar_27;
  tmpvar_27 = (((tmpvar_24 * tmpvar_24) + (tmpvar_25 * tmpvar_25)) + (tmpvar_26 * tmpvar_26));
  highp vec4 tmpvar_28;
  tmpvar_28 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_24 * tmpvar_17.x) + (tmpvar_25 * tmpvar_17.y)) + (tmpvar_26 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_27)
  )) * (1.0/((1.0 + 
    (tmpvar_27 * lightAttenSq_22)
  ))));
  highp vec3 tmpvar_29;
  tmpvar_29 = (((
    (lightColor0_18 * tmpvar_28.x)
   + 
    (lightColor1_19 * tmpvar_28.y)
  ) + (lightColor2_20 * tmpvar_28.z)) + (lightColor3_21 * tmpvar_28.w));
  tmpvar_6.xyz = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_17, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_30;
  highp float tmpvar_31;
  tmpvar_31 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_8.xyz, tmpvar_8.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * cse_15);
  tmpvar_7 = tmpvar_32;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_2.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_13;
  highp vec3 tmpvar_14;
  highp vec4 cse_15;
  cse_15 = (_Object2World * _glesVertex);
  tmpvar_14 = cse_15.xyz;
  pos_WS_1 = tmpvar_14;
  highp mat3 tmpvar_16;
  tmpvar_16[0] = _Object2World[0].xyz;
  tmpvar_16[1] = _Object2World[1].xyz;
  tmpvar_16[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize((tmpvar_16 * _glesNormal));
  tmpvar_5 = tmpvar_17;
  highp vec3 lightColor0_18;
  lightColor0_18 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_19;
  lightColor1_19 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_20;
  lightColor2_20 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_21;
  lightColor3_21 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_22;
  lightAttenSq_22 = unity_4LightAtten0;
  highp vec3 pos_23;
  pos_23 = pos_WS_1;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosX0 - pos_23.x);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosY0 - pos_23.y);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosZ0 - pos_23.z);
  highp vec4 tmpvar_27;
  tmpvar_27 = (((tmpvar_24 * tmpvar_24) + (tmpvar_25 * tmpvar_25)) + (tmpvar_26 * tmpvar_26));
  highp vec4 tmpvar_28;
  tmpvar_28 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_24 * tmpvar_17.x) + (tmpvar_25 * tmpvar_17.y)) + (tmpvar_26 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_27)
  )) * (1.0/((1.0 + 
    (tmpvar_27 * lightAttenSq_22)
  ))));
  highp vec3 tmpvar_29;
  tmpvar_29 = (((
    (lightColor0_18 * tmpvar_28.x)
   + 
    (lightColor1_19 * tmpvar_28.y)
  ) + (lightColor2_20 * tmpvar_28.z)) + (lightColor3_21 * tmpvar_28.w));
  tmpvar_6.xyz = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_17, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_30;
  highp float tmpvar_31;
  tmpvar_31 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_8.xyz, tmpvar_8.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * cse_15);
  tmpvar_7 = tmpvar_32;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_1.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_6 = tmpvar_17;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_1.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_6 = tmpvar_17;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_1.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_6 = tmpvar_17;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_1.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_6 = tmpvar_17;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_2.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_13;
  highp vec3 tmpvar_14;
  highp vec4 cse_15;
  cse_15 = (_Object2World * _glesVertex);
  tmpvar_14 = cse_15.xyz;
  pos_WS_1 = tmpvar_14;
  highp mat3 tmpvar_16;
  tmpvar_16[0] = _Object2World[0].xyz;
  tmpvar_16[1] = _Object2World[1].xyz;
  tmpvar_16[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize((tmpvar_16 * _glesNormal));
  tmpvar_5 = tmpvar_17;
  highp vec3 lightColor0_18;
  lightColor0_18 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_19;
  lightColor1_19 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_20;
  lightColor2_20 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_21;
  lightColor3_21 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_22;
  lightAttenSq_22 = unity_4LightAtten0;
  highp vec3 pos_23;
  pos_23 = pos_WS_1;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosX0 - pos_23.x);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosY0 - pos_23.y);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosZ0 - pos_23.z);
  highp vec4 tmpvar_27;
  tmpvar_27 = (((tmpvar_24 * tmpvar_24) + (tmpvar_25 * tmpvar_25)) + (tmpvar_26 * tmpvar_26));
  highp vec4 tmpvar_28;
  tmpvar_28 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_24 * tmpvar_17.x) + (tmpvar_25 * tmpvar_17.y)) + (tmpvar_26 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_27)
  )) * (1.0/((1.0 + 
    (tmpvar_27 * lightAttenSq_22)
  ))));
  highp vec3 tmpvar_29;
  tmpvar_29 = (((
    (lightColor0_18 * tmpvar_28.x)
   + 
    (lightColor1_19 * tmpvar_28.y)
  ) + (lightColor2_20 * tmpvar_28.z)) + (lightColor3_21 * tmpvar_28.w));
  tmpvar_6.xyz = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_17, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_30;
  highp float tmpvar_31;
  tmpvar_31 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_8.xyz, tmpvar_8.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * cse_15);
  tmpvar_7 = tmpvar_32;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_2.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_13;
  highp vec3 tmpvar_14;
  highp vec4 cse_15;
  cse_15 = (_Object2World * _glesVertex);
  tmpvar_14 = cse_15.xyz;
  pos_WS_1 = tmpvar_14;
  highp mat3 tmpvar_16;
  tmpvar_16[0] = _Object2World[0].xyz;
  tmpvar_16[1] = _Object2World[1].xyz;
  tmpvar_16[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize((tmpvar_16 * _glesNormal));
  tmpvar_5 = tmpvar_17;
  highp vec3 lightColor0_18;
  lightColor0_18 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_19;
  lightColor1_19 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_20;
  lightColor2_20 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_21;
  lightColor3_21 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_22;
  lightAttenSq_22 = unity_4LightAtten0;
  highp vec3 pos_23;
  pos_23 = pos_WS_1;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosX0 - pos_23.x);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosY0 - pos_23.y);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosZ0 - pos_23.z);
  highp vec4 tmpvar_27;
  tmpvar_27 = (((tmpvar_24 * tmpvar_24) + (tmpvar_25 * tmpvar_25)) + (tmpvar_26 * tmpvar_26));
  highp vec4 tmpvar_28;
  tmpvar_28 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_24 * tmpvar_17.x) + (tmpvar_25 * tmpvar_17.y)) + (tmpvar_26 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_27)
  )) * (1.0/((1.0 + 
    (tmpvar_27 * lightAttenSq_22)
  ))));
  highp vec3 tmpvar_29;
  tmpvar_29 = (((
    (lightColor0_18 * tmpvar_28.x)
   + 
    (lightColor1_19 * tmpvar_28.y)
  ) + (lightColor2_20 * tmpvar_28.z)) + (lightColor3_21 * tmpvar_28.w));
  tmpvar_6.xyz = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_17, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_30;
  highp float tmpvar_31;
  tmpvar_31 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_8.xyz, tmpvar_8.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * cse_15);
  tmpvar_7 = tmpvar_32;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_2.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_13;
  highp vec3 tmpvar_14;
  highp vec4 cse_15;
  cse_15 = (_Object2World * _glesVertex);
  tmpvar_14 = cse_15.xyz;
  pos_WS_1 = tmpvar_14;
  highp mat3 tmpvar_16;
  tmpvar_16[0] = _Object2World[0].xyz;
  tmpvar_16[1] = _Object2World[1].xyz;
  tmpvar_16[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize((tmpvar_16 * _glesNormal));
  tmpvar_5 = tmpvar_17;
  highp vec3 lightColor0_18;
  lightColor0_18 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_19;
  lightColor1_19 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_20;
  lightColor2_20 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_21;
  lightColor3_21 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_22;
  lightAttenSq_22 = unity_4LightAtten0;
  highp vec3 pos_23;
  pos_23 = pos_WS_1;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosX0 - pos_23.x);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosY0 - pos_23.y);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosZ0 - pos_23.z);
  highp vec4 tmpvar_27;
  tmpvar_27 = (((tmpvar_24 * tmpvar_24) + (tmpvar_25 * tmpvar_25)) + (tmpvar_26 * tmpvar_26));
  highp vec4 tmpvar_28;
  tmpvar_28 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_24 * tmpvar_17.x) + (tmpvar_25 * tmpvar_17.y)) + (tmpvar_26 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_27)
  )) * (1.0/((1.0 + 
    (tmpvar_27 * lightAttenSq_22)
  ))));
  highp vec3 tmpvar_29;
  tmpvar_29 = (((
    (lightColor0_18 * tmpvar_28.x)
   + 
    (lightColor1_19 * tmpvar_28.y)
  ) + (lightColor2_20 * tmpvar_28.z)) + (lightColor3_21 * tmpvar_28.w));
  tmpvar_6.xyz = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_17, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_30;
  highp float tmpvar_31;
  tmpvar_31 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_8.xyz, tmpvar_8.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * cse_15);
  tmpvar_7 = tmpvar_32;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_2.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_13;
  highp vec3 tmpvar_14;
  highp vec4 cse_15;
  cse_15 = (_Object2World * _glesVertex);
  tmpvar_14 = cse_15.xyz;
  pos_WS_1 = tmpvar_14;
  highp mat3 tmpvar_16;
  tmpvar_16[0] = _Object2World[0].xyz;
  tmpvar_16[1] = _Object2World[1].xyz;
  tmpvar_16[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize((tmpvar_16 * _glesNormal));
  tmpvar_5 = tmpvar_17;
  highp vec3 lightColor0_18;
  lightColor0_18 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_19;
  lightColor1_19 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_20;
  lightColor2_20 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_21;
  lightColor3_21 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_22;
  lightAttenSq_22 = unity_4LightAtten0;
  highp vec3 pos_23;
  pos_23 = pos_WS_1;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosX0 - pos_23.x);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosY0 - pos_23.y);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosZ0 - pos_23.z);
  highp vec4 tmpvar_27;
  tmpvar_27 = (((tmpvar_24 * tmpvar_24) + (tmpvar_25 * tmpvar_25)) + (tmpvar_26 * tmpvar_26));
  highp vec4 tmpvar_28;
  tmpvar_28 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_24 * tmpvar_17.x) + (tmpvar_25 * tmpvar_17.y)) + (tmpvar_26 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_27)
  )) * (1.0/((1.0 + 
    (tmpvar_27 * lightAttenSq_22)
  ))));
  highp vec3 tmpvar_29;
  tmpvar_29 = (((
    (lightColor0_18 * tmpvar_28.x)
   + 
    (lightColor1_19 * tmpvar_28.y)
  ) + (lightColor2_20 * tmpvar_28.z)) + (lightColor3_21 * tmpvar_28.w));
  tmpvar_6.xyz = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_17, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_30;
  highp float tmpvar_31;
  tmpvar_31 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_8.xyz, tmpvar_8.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * cse_15);
  tmpvar_7 = tmpvar_32;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_5.xyz, tmpvar_5.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_5.xyz, tmpvar_5.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_5.xyz, tmpvar_5.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_6;
  tmpvar_6 = min (0.0, (tmpvar_5.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_7;
  tmpvar_7 = ((tmpvar_6 * tmpvar_6) * 0.001);
  highp float tmpvar_8;
  tmpvar_8 = (max (0.0, (
    abs(tmpvar_5.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_5.x));
  pos_1.zw = tmpvar_5.zw;
  highp vec2 tmpvar_9;
  tmpvar_9.x = (_V_CW_Y_Bend_Size * tmpvar_7);
  tmpvar_9.y = ((_V_CW_X_Bend_Size * tmpvar_7) + ((
    (tmpvar_8 * tmpvar_8)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_5.xy + tmpvar_9);
  highp vec2 tmpvar_10;
  tmpvar_10 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_10;
  highp mat3 tmpvar_11;
  tmpvar_11[0] = _Object2World[0].xyz;
  tmpvar_11[1] = _Object2World[1].xyz;
  tmpvar_11[2] = _Object2World[2].xyz;
  highp float tmpvar_12;
  tmpvar_12 = max (0.0, dot (normalize(
    (tmpvar_11 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_5.xyz, tmpvar_5.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_13;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (normalize(
    (tmpvar_12 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * tmpvar_6.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (normalize(
    (tmpvar_12 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * tmpvar_6.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  highp vec3 lightColor0_15;
  lightColor0_15 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_16;
  lightColor1_16 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_17;
  lightColor2_17 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_18;
  lightColor3_18 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_19;
  lightAttenSq_19 = unity_4LightAtten0;
  highp vec3 pos_20;
  pos_20 = pos_WS_1;
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosX0 - pos_20.x);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosY0 - pos_20.y);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosZ0 - pos_20.z);
  highp vec4 tmpvar_24;
  tmpvar_24 = (((tmpvar_21 * tmpvar_21) + (tmpvar_22 * tmpvar_22)) + (tmpvar_23 * tmpvar_23));
  highp vec4 tmpvar_25;
  tmpvar_25 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_21 * tmpvar_14.x) + (tmpvar_22 * tmpvar_14.y)) + (tmpvar_23 * tmpvar_14.z))
   * 
    inversesqrt(tmpvar_24)
  )) * (1.0/((1.0 + 
    (tmpvar_24 * lightAttenSq_19)
  ))));
  highp vec3 tmpvar_26;
  tmpvar_26 = (((
    (lightColor0_15 * tmpvar_25.x)
   + 
    (lightColor1_16 * tmpvar_25.y)
  ) + (lightColor2_17 * tmpvar_25.z)) + (lightColor3_18 * tmpvar_25.w));
  tmpvar_5.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_28;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  highp vec3 lightColor0_15;
  lightColor0_15 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_16;
  lightColor1_16 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_17;
  lightColor2_17 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_18;
  lightColor3_18 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_19;
  lightAttenSq_19 = unity_4LightAtten0;
  highp vec3 pos_20;
  pos_20 = pos_WS_1;
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosX0 - pos_20.x);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosY0 - pos_20.y);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosZ0 - pos_20.z);
  highp vec4 tmpvar_24;
  tmpvar_24 = (((tmpvar_21 * tmpvar_21) + (tmpvar_22 * tmpvar_22)) + (tmpvar_23 * tmpvar_23));
  highp vec4 tmpvar_25;
  tmpvar_25 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_21 * tmpvar_14.x) + (tmpvar_22 * tmpvar_14.y)) + (tmpvar_23 * tmpvar_14.z))
   * 
    inversesqrt(tmpvar_24)
  )) * (1.0/((1.0 + 
    (tmpvar_24 * lightAttenSq_19)
  ))));
  highp vec3 tmpvar_26;
  tmpvar_26 = (((
    (lightColor0_15 * tmpvar_25.x)
   + 
    (lightColor1_16 * tmpvar_25.y)
  ) + (lightColor2_17 * tmpvar_25.z)) + (lightColor3_18 * tmpvar_25.w));
  tmpvar_5.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_28;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  highp vec3 lightColor0_15;
  lightColor0_15 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_16;
  lightColor1_16 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_17;
  lightColor2_17 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_18;
  lightColor3_18 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_19;
  lightAttenSq_19 = unity_4LightAtten0;
  highp vec3 pos_20;
  pos_20 = pos_WS_1;
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosX0 - pos_20.x);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosY0 - pos_20.y);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosZ0 - pos_20.z);
  highp vec4 tmpvar_24;
  tmpvar_24 = (((tmpvar_21 * tmpvar_21) + (tmpvar_22 * tmpvar_22)) + (tmpvar_23 * tmpvar_23));
  highp vec4 tmpvar_25;
  tmpvar_25 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_21 * tmpvar_14.x) + (tmpvar_22 * tmpvar_14.y)) + (tmpvar_23 * tmpvar_14.z))
   * 
    inversesqrt(tmpvar_24)
  )) * (1.0/((1.0 + 
    (tmpvar_24 * lightAttenSq_19)
  ))));
  highp vec3 tmpvar_26;
  tmpvar_26 = (((
    (lightColor0_15 * tmpvar_25.x)
   + 
    (lightColor1_16 * tmpvar_25.y)
  ) + (lightColor2_17 * tmpvar_25.z)) + (lightColor3_18 * tmpvar_25.w));
  tmpvar_5.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_28;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_2.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_11;
  highp vec3 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  highp vec3 lightColor0_15;
  lightColor0_15 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_16;
  lightColor1_16 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_17;
  lightColor2_17 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_18;
  lightColor3_18 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_19;
  lightAttenSq_19 = unity_4LightAtten0;
  highp vec3 pos_20;
  pos_20 = pos_WS_1;
  highp vec4 tmpvar_21;
  tmpvar_21 = (unity_4LightPosX0 - pos_20.x);
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosY0 - pos_20.y);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosZ0 - pos_20.z);
  highp vec4 tmpvar_24;
  tmpvar_24 = (((tmpvar_21 * tmpvar_21) + (tmpvar_22 * tmpvar_22)) + (tmpvar_23 * tmpvar_23));
  highp vec4 tmpvar_25;
  tmpvar_25 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_21 * tmpvar_14.x) + (tmpvar_22 * tmpvar_14.y)) + (tmpvar_23 * tmpvar_14.z))
   * 
    inversesqrt(tmpvar_24)
  )) * (1.0/((1.0 + 
    (tmpvar_24 * lightAttenSq_19)
  ))));
  highp vec3 tmpvar_26;
  tmpvar_26 = (((
    (lightColor0_15 * tmpvar_25.x)
   + 
    (lightColor1_16 * tmpvar_25.y)
  ) + (lightColor2_17 * tmpvar_25.z)) + (lightColor3_18 * tmpvar_25.w));
  tmpvar_5.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_28;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_30;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_31;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * tmpvar_6.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_30;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_31;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * tmpvar_6.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (normalize(
    (tmpvar_12 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * tmpvar_6.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (normalize(
    (tmpvar_12 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * tmpvar_6.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (normalize(
    (tmpvar_12 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * tmpvar_6.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp float tmpvar_13;
  tmpvar_13 = max (0.0, dot (normalize(
    (tmpvar_12 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_4.w = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_14;
  highp vec4 tmpvar_15;
  tmpvar_15 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_5 = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD4 = tmpvar_4;
  xlv_TEXCOORD7 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * tmpvar_6.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_30;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_31;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * tmpvar_6.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
out lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_30;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_31;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * tmpvar_6.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_30;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_31;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * tmpvar_6.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
out lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  highp vec4 cse_14;
  cse_14 = (_Object2World * _glesVertex);
  tmpvar_13 = cse_14.xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_15;
  tmpvar_15[0] = _Object2World[0].xyz;
  tmpvar_15[1] = _Object2World[1].xyz;
  tmpvar_15[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_16;
  tmpvar_16 = normalize((tmpvar_15 * _glesNormal));
  highp vec3 lightColor0_17;
  lightColor0_17 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_18;
  lightColor1_18 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_19;
  lightColor2_19 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_20;
  lightColor3_20 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_21;
  lightAttenSq_21 = unity_4LightAtten0;
  highp vec3 pos_22;
  pos_22 = pos_WS_1;
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosX0 - pos_22.x);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosY0 - pos_22.y);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosZ0 - pos_22.z);
  highp vec4 tmpvar_26;
  tmpvar_26 = (((tmpvar_23 * tmpvar_23) + (tmpvar_24 * tmpvar_24)) + (tmpvar_25 * tmpvar_25));
  highp vec4 tmpvar_27;
  tmpvar_27 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_23 * tmpvar_16.x) + (tmpvar_24 * tmpvar_16.y)) + (tmpvar_25 * tmpvar_16.z))
   * 
    inversesqrt(tmpvar_26)
  )) * (1.0/((1.0 + 
    (tmpvar_26 * lightAttenSq_21)
  ))));
  highp vec3 tmpvar_28;
  tmpvar_28 = (((
    (lightColor0_17 * tmpvar_27.x)
   + 
    (lightColor1_18 * tmpvar_27.y)
  ) + (lightColor2_19 * tmpvar_27.z)) + (lightColor3_20 * tmpvar_27.w));
  tmpvar_5.xyz = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_16, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_30;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_World2Shadow[0] * cse_14);
  tmpvar_6 = tmpvar_31;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * tmpvar_6.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_4 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_4 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_4 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_6;
  tmpvar_6 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_7;
  tmpvar_7 = min (0.0, (tmpvar_6.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * 0.001);
  highp float tmpvar_9;
  tmpvar_9 = (max (0.0, (
    abs(tmpvar_6.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_6.x));
  pos_1.zw = tmpvar_6.zw;
  highp vec2 tmpvar_10;
  tmpvar_10.x = (_V_CW_Y_Bend_Size * tmpvar_8);
  tmpvar_10.y = ((_V_CW_X_Bend_Size * tmpvar_8) + ((
    (tmpvar_9 * tmpvar_9)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_6.xy + tmpvar_10);
  highp vec2 tmpvar_11;
  tmpvar_11 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_11;
  highp mat3 tmpvar_12;
  tmpvar_12[0] = _Object2World[0].xyz;
  tmpvar_12[1] = _Object2World[1].xyz;
  tmpvar_12[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_13;
  tmpvar_13 = normalize((tmpvar_12 * _glesNormal));
  tmpvar_4 = tmpvar_13;
  highp float tmpvar_14;
  tmpvar_14 = max (0.0, dot (tmpvar_13, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_6.xyz, tmpvar_6.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_15;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_1.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_6 = tmpvar_17;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_1.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_6 = tmpvar_17;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  tmpvar_13 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  tmpvar_5 = tmpvar_15;
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_6.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  tmpvar_13 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  tmpvar_5 = tmpvar_15;
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_6.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  tmpvar_13 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  tmpvar_5 = tmpvar_15;
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_6.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_2.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_12;
  highp vec3 tmpvar_13;
  tmpvar_13 = (_Object2World * _glesVertex).xyz;
  pos_WS_1 = tmpvar_13;
  highp mat3 tmpvar_14;
  tmpvar_14[0] = _Object2World[0].xyz;
  tmpvar_14[1] = _Object2World[1].xyz;
  tmpvar_14[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_15;
  tmpvar_15 = normalize((tmpvar_14 * _glesNormal));
  tmpvar_5 = tmpvar_15;
  highp vec3 lightColor0_16;
  lightColor0_16 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_17;
  lightColor1_17 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_18;
  lightColor2_18 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_19;
  lightColor3_19 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_20;
  lightAttenSq_20 = unity_4LightAtten0;
  highp vec3 pos_21;
  pos_21 = pos_WS_1;
  highp vec4 tmpvar_22;
  tmpvar_22 = (unity_4LightPosX0 - pos_21.x);
  highp vec4 tmpvar_23;
  tmpvar_23 = (unity_4LightPosY0 - pos_21.y);
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosZ0 - pos_21.z);
  highp vec4 tmpvar_25;
  tmpvar_25 = (((tmpvar_22 * tmpvar_22) + (tmpvar_23 * tmpvar_23)) + (tmpvar_24 * tmpvar_24));
  highp vec4 tmpvar_26;
  tmpvar_26 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_22 * tmpvar_15.x) + (tmpvar_23 * tmpvar_15.y)) + (tmpvar_24 * tmpvar_15.z))
   * 
    inversesqrt(tmpvar_25)
  )) * (1.0/((1.0 + 
    (tmpvar_25 * lightAttenSq_20)
  ))));
  highp vec3 tmpvar_27;
  tmpvar_27 = (((
    (lightColor0_16 * tmpvar_26.x)
   + 
    (lightColor1_17 * tmpvar_26.y)
  ) + (lightColor2_18 * tmpvar_26.z)) + (lightColor3_19 * tmpvar_26.w));
  tmpvar_6.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_15, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_28;
  highp float tmpvar_29;
  tmpvar_29 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_29;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_2.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_13;
  highp vec3 tmpvar_14;
  highp vec4 cse_15;
  cse_15 = (_Object2World * _glesVertex);
  tmpvar_14 = cse_15.xyz;
  pos_WS_1 = tmpvar_14;
  highp mat3 tmpvar_16;
  tmpvar_16[0] = _Object2World[0].xyz;
  tmpvar_16[1] = _Object2World[1].xyz;
  tmpvar_16[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize((tmpvar_16 * _glesNormal));
  tmpvar_5 = tmpvar_17;
  highp vec3 lightColor0_18;
  lightColor0_18 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_19;
  lightColor1_19 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_20;
  lightColor2_20 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_21;
  lightColor3_21 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_22;
  lightAttenSq_22 = unity_4LightAtten0;
  highp vec3 pos_23;
  pos_23 = pos_WS_1;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosX0 - pos_23.x);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosY0 - pos_23.y);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosZ0 - pos_23.z);
  highp vec4 tmpvar_27;
  tmpvar_27 = (((tmpvar_24 * tmpvar_24) + (tmpvar_25 * tmpvar_25)) + (tmpvar_26 * tmpvar_26));
  highp vec4 tmpvar_28;
  tmpvar_28 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_24 * tmpvar_17.x) + (tmpvar_25 * tmpvar_17.y)) + (tmpvar_26 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_27)
  )) * (1.0/((1.0 + 
    (tmpvar_27 * lightAttenSq_22)
  ))));
  highp vec3 tmpvar_29;
  tmpvar_29 = (((
    (lightColor0_18 * tmpvar_28.x)
   + 
    (lightColor1_19 * tmpvar_28.y)
  ) + (lightColor2_20 * tmpvar_28.z)) + (lightColor3_21 * tmpvar_28.w));
  tmpvar_6.xyz = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_17, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_30;
  highp float tmpvar_31;
  tmpvar_31 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_8.xyz, tmpvar_8.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * cse_15);
  tmpvar_7 = tmpvar_32;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_2.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_13;
  highp vec3 tmpvar_14;
  highp vec4 cse_15;
  cse_15 = (_Object2World * _glesVertex);
  tmpvar_14 = cse_15.xyz;
  pos_WS_1 = tmpvar_14;
  highp mat3 tmpvar_16;
  tmpvar_16[0] = _Object2World[0].xyz;
  tmpvar_16[1] = _Object2World[1].xyz;
  tmpvar_16[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize((tmpvar_16 * _glesNormal));
  tmpvar_5 = tmpvar_17;
  highp vec3 lightColor0_18;
  lightColor0_18 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_19;
  lightColor1_19 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_20;
  lightColor2_20 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_21;
  lightColor3_21 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_22;
  lightAttenSq_22 = unity_4LightAtten0;
  highp vec3 pos_23;
  pos_23 = pos_WS_1;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosX0 - pos_23.x);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosY0 - pos_23.y);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosZ0 - pos_23.z);
  highp vec4 tmpvar_27;
  tmpvar_27 = (((tmpvar_24 * tmpvar_24) + (tmpvar_25 * tmpvar_25)) + (tmpvar_26 * tmpvar_26));
  highp vec4 tmpvar_28;
  tmpvar_28 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_24 * tmpvar_17.x) + (tmpvar_25 * tmpvar_17.y)) + (tmpvar_26 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_27)
  )) * (1.0/((1.0 + 
    (tmpvar_27 * lightAttenSq_22)
  ))));
  highp vec3 tmpvar_29;
  tmpvar_29 = (((
    (lightColor0_18 * tmpvar_28.x)
   + 
    (lightColor1_19 * tmpvar_28.y)
  ) + (lightColor2_20 * tmpvar_28.z)) + (lightColor3_21 * tmpvar_28.w));
  tmpvar_6.xyz = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_17, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_30;
  highp float tmpvar_31;
  tmpvar_31 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_8.xyz, tmpvar_8.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * cse_15);
  tmpvar_7 = tmpvar_32;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_1.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_6 = tmpvar_17;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_1.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_6 = tmpvar_17;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_1.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_6 = tmpvar_17;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 pos_1;
  mediump vec4 tmpvar_2;
  lowp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  tmpvar_2.zw = vec2(0.0, 0.0);
  tmpvar_3.xzw = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_1.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_1.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_2.xy = tmpvar_12;
  highp mat3 tmpvar_13;
  tmpvar_13[0] = _Object2World[0].xyz;
  tmpvar_13[1] = _Object2World[1].xyz;
  tmpvar_13[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_14;
  tmpvar_14 = normalize((tmpvar_13 * _glesNormal));
  tmpvar_4 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = max (0.0, dot (tmpvar_14, _WorldSpaceLightPos0.xyz));
  tmpvar_5.w = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_7.xyz, tmpvar_7.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_3.y = tmpvar_16;
  highp vec4 tmpvar_17;
  tmpvar_17 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_6 = tmpvar_17;
  gl_Position = (glstate_matrix_projection * pos_1);
  xlv_TEXCOORD0 = tmpvar_2;
  xlv_TEXCOORD2 = tmpvar_3;
  xlv_TEXCOORD3 = tmpvar_4;
  xlv_TEXCOORD4 = tmpvar_5;
  xlv_TEXCOORD7 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_2.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_13;
  highp vec3 tmpvar_14;
  highp vec4 cse_15;
  cse_15 = (_Object2World * _glesVertex);
  tmpvar_14 = cse_15.xyz;
  pos_WS_1 = tmpvar_14;
  highp mat3 tmpvar_16;
  tmpvar_16[0] = _Object2World[0].xyz;
  tmpvar_16[1] = _Object2World[1].xyz;
  tmpvar_16[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize((tmpvar_16 * _glesNormal));
  tmpvar_5 = tmpvar_17;
  highp vec3 lightColor0_18;
  lightColor0_18 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_19;
  lightColor1_19 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_20;
  lightColor2_20 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_21;
  lightColor3_21 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_22;
  lightAttenSq_22 = unity_4LightAtten0;
  highp vec3 pos_23;
  pos_23 = pos_WS_1;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosX0 - pos_23.x);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosY0 - pos_23.y);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosZ0 - pos_23.z);
  highp vec4 tmpvar_27;
  tmpvar_27 = (((tmpvar_24 * tmpvar_24) + (tmpvar_25 * tmpvar_25)) + (tmpvar_26 * tmpvar_26));
  highp vec4 tmpvar_28;
  tmpvar_28 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_24 * tmpvar_17.x) + (tmpvar_25 * tmpvar_17.y)) + (tmpvar_26 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_27)
  )) * (1.0/((1.0 + 
    (tmpvar_27 * lightAttenSq_22)
  ))));
  highp vec3 tmpvar_29;
  tmpvar_29 = (((
    (lightColor0_18 * tmpvar_28.x)
   + 
    (lightColor1_19 * tmpvar_28.y)
  ) + (lightColor2_20 * tmpvar_28.z)) + (lightColor3_21 * tmpvar_28.w));
  tmpvar_6.xyz = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_17, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_30;
  highp float tmpvar_31;
  tmpvar_31 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_8.xyz, tmpvar_8.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * cse_15);
  tmpvar_7 = tmpvar_32;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
out lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_2.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_13;
  highp vec3 tmpvar_14;
  highp vec4 cse_15;
  cse_15 = (_Object2World * _glesVertex);
  tmpvar_14 = cse_15.xyz;
  pos_WS_1 = tmpvar_14;
  highp mat3 tmpvar_16;
  tmpvar_16[0] = _Object2World[0].xyz;
  tmpvar_16[1] = _Object2World[1].xyz;
  tmpvar_16[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize((tmpvar_16 * _glesNormal));
  tmpvar_5 = tmpvar_17;
  highp vec3 lightColor0_18;
  lightColor0_18 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_19;
  lightColor1_19 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_20;
  lightColor2_20 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_21;
  lightColor3_21 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_22;
  lightAttenSq_22 = unity_4LightAtten0;
  highp vec3 pos_23;
  pos_23 = pos_WS_1;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosX0 - pos_23.x);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosY0 - pos_23.y);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosZ0 - pos_23.z);
  highp vec4 tmpvar_27;
  tmpvar_27 = (((tmpvar_24 * tmpvar_24) + (tmpvar_25 * tmpvar_25)) + (tmpvar_26 * tmpvar_26));
  highp vec4 tmpvar_28;
  tmpvar_28 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_24 * tmpvar_17.x) + (tmpvar_25 * tmpvar_17.y)) + (tmpvar_26 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_27)
  )) * (1.0/((1.0 + 
    (tmpvar_27 * lightAttenSq_22)
  ))));
  highp vec3 tmpvar_29;
  tmpvar_29 = (((
    (lightColor0_18 * tmpvar_28.x)
   + 
    (lightColor1_19 * tmpvar_28.y)
  ) + (lightColor2_20 * tmpvar_28.z)) + (lightColor3_21 * tmpvar_28.w));
  tmpvar_6.xyz = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_17, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_30;
  highp float tmpvar_31;
  tmpvar_31 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_8.xyz, tmpvar_8.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * cse_15);
  tmpvar_7 = tmpvar_32;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_2.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_13;
  highp vec3 tmpvar_14;
  highp vec4 cse_15;
  cse_15 = (_Object2World * _glesVertex);
  tmpvar_14 = cse_15.xyz;
  pos_WS_1 = tmpvar_14;
  highp mat3 tmpvar_16;
  tmpvar_16[0] = _Object2World[0].xyz;
  tmpvar_16[1] = _Object2World[1].xyz;
  tmpvar_16[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize((tmpvar_16 * _glesNormal));
  tmpvar_5 = tmpvar_17;
  highp vec3 lightColor0_18;
  lightColor0_18 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_19;
  lightColor1_19 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_20;
  lightColor2_20 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_21;
  lightColor3_21 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_22;
  lightAttenSq_22 = unity_4LightAtten0;
  highp vec3 pos_23;
  pos_23 = pos_WS_1;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosX0 - pos_23.x);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosY0 - pos_23.y);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosZ0 - pos_23.z);
  highp vec4 tmpvar_27;
  tmpvar_27 = (((tmpvar_24 * tmpvar_24) + (tmpvar_25 * tmpvar_25)) + (tmpvar_26 * tmpvar_26));
  highp vec4 tmpvar_28;
  tmpvar_28 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_24 * tmpvar_17.x) + (tmpvar_25 * tmpvar_17.y)) + (tmpvar_26 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_27)
  )) * (1.0/((1.0 + 
    (tmpvar_27 * lightAttenSq_22)
  ))));
  highp vec3 tmpvar_29;
  tmpvar_29 = (((
    (lightColor0_18 * tmpvar_28.x)
   + 
    (lightColor1_19 * tmpvar_28.y)
  ) + (lightColor2_20 * tmpvar_28.z)) + (lightColor3_21 * tmpvar_28.w));
  tmpvar_6.xyz = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_17, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_30;
  highp float tmpvar_31;
  tmpvar_31 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_8.xyz, tmpvar_8.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * cse_15);
  tmpvar_7 = tmpvar_32;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_RIM_OFF" "V_CW_IBL_ON" "V_CW_VERTEX_COLOR_ON" "V_CW_FOG_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Fog_Density;
uniform mediump float _V_CW_Fog_Start;
uniform mediump float _V_CW_Fog_End;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
out lowp vec4 xlv_COLOR;
void main ()
{
  mediump vec3 pos_WS_1;
  highp vec4 pos_2;
  mediump vec4 tmpvar_3;
  lowp vec4 tmpvar_4;
  mediump vec3 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_4.xzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_2.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_2.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.xy = tmpvar_13;
  highp vec3 tmpvar_14;
  highp vec4 cse_15;
  cse_15 = (_Object2World * _glesVertex);
  tmpvar_14 = cse_15.xyz;
  pos_WS_1 = tmpvar_14;
  highp mat3 tmpvar_16;
  tmpvar_16[0] = _Object2World[0].xyz;
  tmpvar_16[1] = _Object2World[1].xyz;
  tmpvar_16[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize((tmpvar_16 * _glesNormal));
  tmpvar_5 = tmpvar_17;
  highp vec3 lightColor0_18;
  lightColor0_18 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_19;
  lightColor1_19 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_20;
  lightColor2_20 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_21;
  lightColor3_21 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_22;
  lightAttenSq_22 = unity_4LightAtten0;
  highp vec3 pos_23;
  pos_23 = pos_WS_1;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_4LightPosX0 - pos_23.x);
  highp vec4 tmpvar_25;
  tmpvar_25 = (unity_4LightPosY0 - pos_23.y);
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_4LightPosZ0 - pos_23.z);
  highp vec4 tmpvar_27;
  tmpvar_27 = (((tmpvar_24 * tmpvar_24) + (tmpvar_25 * tmpvar_25)) + (tmpvar_26 * tmpvar_26));
  highp vec4 tmpvar_28;
  tmpvar_28 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_24 * tmpvar_17.x) + (tmpvar_25 * tmpvar_17.y)) + (tmpvar_26 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_27)
  )) * (1.0/((1.0 + 
    (tmpvar_27 * lightAttenSq_22)
  ))));
  highp vec3 tmpvar_29;
  tmpvar_29 = (((
    (lightColor0_18 * tmpvar_28.x)
   + 
    (lightColor1_19 * tmpvar_28.y)
  ) + (lightColor2_20 * tmpvar_28.z)) + (lightColor3_21 * tmpvar_28.w));
  tmpvar_6.xyz = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = max (0.0, dot (tmpvar_17, _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_30;
  highp float tmpvar_31;
  tmpvar_31 = clamp (((_V_CW_Fog_End - 
    (sqrt(dot (tmpvar_8.xyz, tmpvar_8.xyz)) * _V_CW_Fog_Density)
  ) / (_V_CW_Fog_End - _V_CW_Fog_Start)), 0.0, 1.0);
  tmpvar_4.y = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * cse_15);
  tmpvar_7 = tmpvar_32;
  gl_Position = (glstate_matrix_projection * pos_2);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Fog_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * tmpvar_6.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Fog_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.yyy);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_3.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_12;
  mediump vec3 vertexPos_13;
  vertexPos_13 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_14;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_16;
  tmpvar_16 = (_World2Object * tmpvar_15).xyz;
  objSpaceCameraPos_14 = tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_17 = normalize((objSpaceCameraPos_14 - vertexPos_13));
  viewDir_OS_2 = tmpvar_17;
  highp mat3 tmpvar_18;
  tmpvar_18[0] = _Object2World[0].xyz;
  tmpvar_18[1] = _Object2World[1].xyz;
  tmpvar_18[2] = _Object2World[2].xyz;
  mediump float tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_19 = tmpvar_20;
  mediump float tmpvar_21;
  tmpvar_21 = (tmpvar_19 * tmpvar_19);
  tmpvar_5.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (0.0, dot (normalize(
    (tmpvar_18 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_22;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_3.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_12;
  mediump vec3 vertexPos_13;
  vertexPos_13 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_14;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_16;
  tmpvar_16 = (_World2Object * tmpvar_15).xyz;
  objSpaceCameraPos_14 = tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_17 = normalize((objSpaceCameraPos_14 - vertexPos_13));
  viewDir_OS_2 = tmpvar_17;
  highp mat3 tmpvar_18;
  tmpvar_18[0] = _Object2World[0].xyz;
  tmpvar_18[1] = _Object2World[1].xyz;
  tmpvar_18[2] = _Object2World[2].xyz;
  mediump float tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_19 = tmpvar_20;
  mediump float tmpvar_21;
  tmpvar_21 = (tmpvar_19 * tmpvar_19);
  tmpvar_5.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (0.0, dot (normalize(
    (tmpvar_18 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_22;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_3.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_12;
  mediump vec3 vertexPos_13;
  vertexPos_13 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_14;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_16;
  tmpvar_16 = (_World2Object * tmpvar_15).xyz;
  objSpaceCameraPos_14 = tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_17 = normalize((objSpaceCameraPos_14 - vertexPos_13));
  viewDir_OS_2 = tmpvar_17;
  highp mat3 tmpvar_18;
  tmpvar_18[0] = _Object2World[0].xyz;
  tmpvar_18[1] = _Object2World[1].xyz;
  tmpvar_18[2] = _Object2World[2].xyz;
  mediump float tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_19 = tmpvar_20;
  mediump float tmpvar_21;
  tmpvar_21 = (tmpvar_19 * tmpvar_19);
  tmpvar_5.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (0.0, dot (normalize(
    (tmpvar_18 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_22;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_3.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_12;
  mediump vec3 vertexPos_13;
  vertexPos_13 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_14;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_16;
  tmpvar_16 = (_World2Object * tmpvar_15).xyz;
  objSpaceCameraPos_14 = tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_17 = normalize((objSpaceCameraPos_14 - vertexPos_13));
  viewDir_OS_2 = tmpvar_17;
  highp mat3 tmpvar_18;
  tmpvar_18[0] = _Object2World[0].xyz;
  tmpvar_18[1] = _Object2World[1].xyz;
  tmpvar_18[2] = _Object2World[2].xyz;
  mediump float tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_19 = tmpvar_20;
  mediump float tmpvar_21;
  tmpvar_21 = (tmpvar_19 * tmpvar_19);
  tmpvar_5.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (0.0, dot (normalize(
    (tmpvar_18 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_22;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_3.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_13;
  mediump vec3 vertexPos_14;
  vertexPos_14 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_15;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_17;
  tmpvar_17 = (_World2Object * tmpvar_16).xyz;
  objSpaceCameraPos_15 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = normalize((objSpaceCameraPos_15 - vertexPos_14));
  viewDir_OS_2 = tmpvar_18;
  highp mat3 tmpvar_19;
  tmpvar_19[0] = _Object2World[0].xyz;
  tmpvar_19[1] = _Object2World[1].xyz;
  tmpvar_19[2] = _Object2World[2].xyz;
  mediump float tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_20 = tmpvar_21;
  mediump float tmpvar_22;
  tmpvar_22 = (tmpvar_20 * tmpvar_20);
  tmpvar_5.x = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (0.0, dot (normalize(
    (tmpvar_19 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_7 = tmpvar_24;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_3.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_13;
  mediump vec3 vertexPos_14;
  vertexPos_14 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_15;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_17;
  tmpvar_17 = (_World2Object * tmpvar_16).xyz;
  objSpaceCameraPos_15 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = normalize((objSpaceCameraPos_15 - vertexPos_14));
  viewDir_OS_2 = tmpvar_18;
  highp mat3 tmpvar_19;
  tmpvar_19[0] = _Object2World[0].xyz;
  tmpvar_19[1] = _Object2World[1].xyz;
  tmpvar_19[2] = _Object2World[2].xyz;
  mediump float tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_20 = tmpvar_21;
  mediump float tmpvar_22;
  tmpvar_22 = (tmpvar_20 * tmpvar_20);
  tmpvar_5.x = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (0.0, dot (normalize(
    (tmpvar_19 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_7 = tmpvar_24;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_4.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_13;
  mediump vec3 vertexPos_14;
  vertexPos_14 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_15;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_17;
  tmpvar_17 = (_World2Object * tmpvar_16).xyz;
  objSpaceCameraPos_15 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = normalize((objSpaceCameraPos_15 - vertexPos_14));
  viewDir_OS_3 = tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = (_Object2World * _glesVertex).xyz;
  pos_WS_2 = tmpvar_19;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize((tmpvar_20 * _glesNormal));
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = (tmpvar_22 * tmpvar_22);
  tmpvar_6.x = tmpvar_24;
  highp vec3 lightColor0_25;
  lightColor0_25 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_26;
  lightColor1_26 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_27;
  lightColor2_27 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_28;
  lightColor3_28 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_29;
  lightAttenSq_29 = unity_4LightAtten0;
  highp vec3 pos_30;
  pos_30 = pos_WS_2;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - pos_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - pos_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - pos_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_31 * tmpvar_21.x) + (tmpvar_32 * tmpvar_21.y)) + (tmpvar_33 * tmpvar_21.z))
   * 
    inversesqrt(tmpvar_34)
  )) * (1.0/((1.0 + 
    (tmpvar_34 * lightAttenSq_29)
  ))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (((
    (lightColor0_25 * tmpvar_35.x)
   + 
    (lightColor1_26 * tmpvar_35.y)
  ) + (lightColor2_27 * tmpvar_35.z)) + (lightColor3_28 * tmpvar_35.w));
  tmpvar_7.xyz = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = max (0.0, dot (tmpvar_21, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_37;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_4.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_13;
  mediump vec3 vertexPos_14;
  vertexPos_14 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_15;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_17;
  tmpvar_17 = (_World2Object * tmpvar_16).xyz;
  objSpaceCameraPos_15 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = normalize((objSpaceCameraPos_15 - vertexPos_14));
  viewDir_OS_3 = tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = (_Object2World * _glesVertex).xyz;
  pos_WS_2 = tmpvar_19;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize((tmpvar_20 * _glesNormal));
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = (tmpvar_22 * tmpvar_22);
  tmpvar_6.x = tmpvar_24;
  highp vec3 lightColor0_25;
  lightColor0_25 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_26;
  lightColor1_26 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_27;
  lightColor2_27 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_28;
  lightColor3_28 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_29;
  lightAttenSq_29 = unity_4LightAtten0;
  highp vec3 pos_30;
  pos_30 = pos_WS_2;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - pos_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - pos_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - pos_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_31 * tmpvar_21.x) + (tmpvar_32 * tmpvar_21.y)) + (tmpvar_33 * tmpvar_21.z))
   * 
    inversesqrt(tmpvar_34)
  )) * (1.0/((1.0 + 
    (tmpvar_34 * lightAttenSq_29)
  ))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (((
    (lightColor0_25 * tmpvar_35.x)
   + 
    (lightColor1_26 * tmpvar_35.y)
  ) + (lightColor2_27 * tmpvar_35.z)) + (lightColor3_28 * tmpvar_35.w));
  tmpvar_7.xyz = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = max (0.0, dot (tmpvar_21, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_37;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_4.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_13;
  mediump vec3 vertexPos_14;
  vertexPos_14 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_15;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_17;
  tmpvar_17 = (_World2Object * tmpvar_16).xyz;
  objSpaceCameraPos_15 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = normalize((objSpaceCameraPos_15 - vertexPos_14));
  viewDir_OS_3 = tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = (_Object2World * _glesVertex).xyz;
  pos_WS_2 = tmpvar_19;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize((tmpvar_20 * _glesNormal));
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = (tmpvar_22 * tmpvar_22);
  tmpvar_6.x = tmpvar_24;
  highp vec3 lightColor0_25;
  lightColor0_25 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_26;
  lightColor1_26 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_27;
  lightColor2_27 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_28;
  lightColor3_28 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_29;
  lightAttenSq_29 = unity_4LightAtten0;
  highp vec3 pos_30;
  pos_30 = pos_WS_2;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - pos_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - pos_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - pos_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_31 * tmpvar_21.x) + (tmpvar_32 * tmpvar_21.y)) + (tmpvar_33 * tmpvar_21.z))
   * 
    inversesqrt(tmpvar_34)
  )) * (1.0/((1.0 + 
    (tmpvar_34 * lightAttenSq_29)
  ))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (((
    (lightColor0_25 * tmpvar_35.x)
   + 
    (lightColor1_26 * tmpvar_35.y)
  ) + (lightColor2_27 * tmpvar_35.z)) + (lightColor3_28 * tmpvar_35.w));
  tmpvar_7.xyz = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = max (0.0, dot (tmpvar_21, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_37;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_4.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_13;
  mediump vec3 vertexPos_14;
  vertexPos_14 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_15;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_17;
  tmpvar_17 = (_World2Object * tmpvar_16).xyz;
  objSpaceCameraPos_15 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = normalize((objSpaceCameraPos_15 - vertexPos_14));
  viewDir_OS_3 = tmpvar_18;
  highp vec3 tmpvar_19;
  tmpvar_19 = (_Object2World * _glesVertex).xyz;
  pos_WS_2 = tmpvar_19;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize((tmpvar_20 * _glesNormal));
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = (tmpvar_22 * tmpvar_22);
  tmpvar_6.x = tmpvar_24;
  highp vec3 lightColor0_25;
  lightColor0_25 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_26;
  lightColor1_26 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_27;
  lightColor2_27 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_28;
  lightColor3_28 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_29;
  lightAttenSq_29 = unity_4LightAtten0;
  highp vec3 pos_30;
  pos_30 = pos_WS_2;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - pos_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - pos_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - pos_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_31 * tmpvar_21.x) + (tmpvar_32 * tmpvar_21.y)) + (tmpvar_33 * tmpvar_21.z))
   * 
    inversesqrt(tmpvar_34)
  )) * (1.0/((1.0 + 
    (tmpvar_34 * lightAttenSq_29)
  ))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (((
    (lightColor0_25 * tmpvar_35.x)
   + 
    (lightColor1_26 * tmpvar_35.y)
  ) + (lightColor2_27 * tmpvar_35.z)) + (lightColor3_28 * tmpvar_35.w));
  tmpvar_7.xyz = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = max (0.0, dot (tmpvar_21, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_37;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * retColor_2.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_10;
  tmpvar_10 = min (0.0, (tmpvar_9.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_11;
  tmpvar_11 = ((tmpvar_10 * tmpvar_10) * 0.001);
  highp float tmpvar_12;
  tmpvar_12 = (max (0.0, (
    abs(tmpvar_9.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_9.x));
  pos_4.zw = tmpvar_9.zw;
  highp vec2 tmpvar_13;
  tmpvar_13.x = (_V_CW_Y_Bend_Size * tmpvar_11);
  tmpvar_13.y = ((_V_CW_X_Bend_Size * tmpvar_11) + ((
    (tmpvar_12 * tmpvar_12)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_9.xy + tmpvar_13);
  highp vec2 tmpvar_14;
  tmpvar_14 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_14;
  mediump vec3 vertexPos_15;
  vertexPos_15 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_18;
  tmpvar_18 = (_World2Object * tmpvar_17).xyz;
  objSpaceCameraPos_16 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = normalize((objSpaceCameraPos_16 - vertexPos_15));
  viewDir_OS_3 = tmpvar_19;
  highp vec3 tmpvar_20;
  highp vec4 cse_21;
  cse_21 = (_Object2World * _glesVertex);
  tmpvar_20 = cse_21.xyz;
  pos_WS_2 = tmpvar_20;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_23;
  tmpvar_23 = normalize((tmpvar_22 * _glesNormal));
  mediump float tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_24 = tmpvar_25;
  mediump float tmpvar_26;
  tmpvar_26 = (tmpvar_24 * tmpvar_24);
  tmpvar_6.x = tmpvar_26;
  highp vec3 lightColor0_27;
  lightColor0_27 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_28;
  lightColor1_28 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_29;
  lightColor2_29 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_30;
  lightColor3_30 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_31;
  lightAttenSq_31 = unity_4LightAtten0;
  highp vec3 pos_32;
  pos_32 = pos_WS_2;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosX0 - pos_32.x);
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosY0 - pos_32.y);
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_4LightPosZ0 - pos_32.z);
  highp vec4 tmpvar_36;
  tmpvar_36 = (((tmpvar_33 * tmpvar_33) + (tmpvar_34 * tmpvar_34)) + (tmpvar_35 * tmpvar_35));
  highp vec4 tmpvar_37;
  tmpvar_37 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_33 * tmpvar_23.x) + (tmpvar_34 * tmpvar_23.y)) + (tmpvar_35 * tmpvar_23.z))
   * 
    inversesqrt(tmpvar_36)
  )) * (1.0/((1.0 + 
    (tmpvar_36 * lightAttenSq_31)
  ))));
  highp vec3 tmpvar_38;
  tmpvar_38 = (((
    (lightColor0_27 * tmpvar_37.x)
   + 
    (lightColor1_28 * tmpvar_37.y)
  ) + (lightColor2_29 * tmpvar_37.z)) + (lightColor3_30 * tmpvar_37.w));
  tmpvar_7.xyz = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_23, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_39;
  highp vec4 tmpvar_40;
  tmpvar_40 = (unity_World2Shadow[0] * cse_21);
  tmpvar_8 = tmpvar_40;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_10;
  tmpvar_10 = min (0.0, (tmpvar_9.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_11;
  tmpvar_11 = ((tmpvar_10 * tmpvar_10) * 0.001);
  highp float tmpvar_12;
  tmpvar_12 = (max (0.0, (
    abs(tmpvar_9.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_9.x));
  pos_4.zw = tmpvar_9.zw;
  highp vec2 tmpvar_13;
  tmpvar_13.x = (_V_CW_Y_Bend_Size * tmpvar_11);
  tmpvar_13.y = ((_V_CW_X_Bend_Size * tmpvar_11) + ((
    (tmpvar_12 * tmpvar_12)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_9.xy + tmpvar_13);
  highp vec2 tmpvar_14;
  tmpvar_14 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_14;
  mediump vec3 vertexPos_15;
  vertexPos_15 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_18;
  tmpvar_18 = (_World2Object * tmpvar_17).xyz;
  objSpaceCameraPos_16 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = normalize((objSpaceCameraPos_16 - vertexPos_15));
  viewDir_OS_3 = tmpvar_19;
  highp vec3 tmpvar_20;
  highp vec4 cse_21;
  cse_21 = (_Object2World * _glesVertex);
  tmpvar_20 = cse_21.xyz;
  pos_WS_2 = tmpvar_20;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_23;
  tmpvar_23 = normalize((tmpvar_22 * _glesNormal));
  mediump float tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_24 = tmpvar_25;
  mediump float tmpvar_26;
  tmpvar_26 = (tmpvar_24 * tmpvar_24);
  tmpvar_6.x = tmpvar_26;
  highp vec3 lightColor0_27;
  lightColor0_27 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_28;
  lightColor1_28 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_29;
  lightColor2_29 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_30;
  lightColor3_30 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_31;
  lightAttenSq_31 = unity_4LightAtten0;
  highp vec3 pos_32;
  pos_32 = pos_WS_2;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosX0 - pos_32.x);
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosY0 - pos_32.y);
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_4LightPosZ0 - pos_32.z);
  highp vec4 tmpvar_36;
  tmpvar_36 = (((tmpvar_33 * tmpvar_33) + (tmpvar_34 * tmpvar_34)) + (tmpvar_35 * tmpvar_35));
  highp vec4 tmpvar_37;
  tmpvar_37 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_33 * tmpvar_23.x) + (tmpvar_34 * tmpvar_23.y)) + (tmpvar_35 * tmpvar_23.z))
   * 
    inversesqrt(tmpvar_36)
  )) * (1.0/((1.0 + 
    (tmpvar_36 * lightAttenSq_31)
  ))));
  highp vec3 tmpvar_38;
  tmpvar_38 = (((
    (lightColor0_27 * tmpvar_37.x)
   + 
    (lightColor1_28 * tmpvar_37.y)
  ) + (lightColor2_29 * tmpvar_37.z)) + (lightColor3_30 * tmpvar_37.w));
  tmpvar_7.xyz = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_23, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_39;
  highp vec4 tmpvar_40;
  tmpvar_40 = (unity_World2Shadow[0] * cse_21);
  tmpvar_8 = tmpvar_40;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_3.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_13;
  mediump vec3 vertexPos_14;
  vertexPos_14 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_15;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_17;
  tmpvar_17 = (_World2Object * tmpvar_16).xyz;
  objSpaceCameraPos_15 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = normalize((objSpaceCameraPos_15 - vertexPos_14));
  viewDir_OS_2 = tmpvar_18;
  highp mat3 tmpvar_19;
  tmpvar_19[0] = _Object2World[0].xyz;
  tmpvar_19[1] = _Object2World[1].xyz;
  tmpvar_19[2] = _Object2World[2].xyz;
  mediump float tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_20 = tmpvar_21;
  mediump float tmpvar_22;
  tmpvar_22 = (tmpvar_20 * tmpvar_20);
  tmpvar_5.x = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (0.0, dot (normalize(
    (tmpvar_19 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_7 = tmpvar_24;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * retColor_2.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_3.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_13;
  mediump vec3 vertexPos_14;
  vertexPos_14 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_15;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_17;
  tmpvar_17 = (_World2Object * tmpvar_16).xyz;
  objSpaceCameraPos_15 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = normalize((objSpaceCameraPos_15 - vertexPos_14));
  viewDir_OS_2 = tmpvar_18;
  highp mat3 tmpvar_19;
  tmpvar_19[0] = _Object2World[0].xyz;
  tmpvar_19[1] = _Object2World[1].xyz;
  tmpvar_19[2] = _Object2World[2].xyz;
  mediump float tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_20 = tmpvar_21;
  mediump float tmpvar_22;
  tmpvar_22 = (tmpvar_20 * tmpvar_20);
  tmpvar_5.x = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (0.0, dot (normalize(
    (tmpvar_19 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_7 = tmpvar_24;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_3.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_13;
  mediump vec3 vertexPos_14;
  vertexPos_14 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_15;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_17;
  tmpvar_17 = (_World2Object * tmpvar_16).xyz;
  objSpaceCameraPos_15 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = normalize((objSpaceCameraPos_15 - vertexPos_14));
  viewDir_OS_2 = tmpvar_18;
  highp mat3 tmpvar_19;
  tmpvar_19[0] = _Object2World[0].xyz;
  tmpvar_19[1] = _Object2World[1].xyz;
  tmpvar_19[2] = _Object2World[2].xyz;
  mediump float tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_20 = tmpvar_21;
  mediump float tmpvar_22;
  tmpvar_22 = (tmpvar_20 * tmpvar_20);
  tmpvar_5.x = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (0.0, dot (normalize(
    (tmpvar_19 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_7 = tmpvar_24;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * retColor_2.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_3.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_13;
  mediump vec3 vertexPos_14;
  vertexPos_14 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_15;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_17;
  tmpvar_17 = (_World2Object * tmpvar_16).xyz;
  objSpaceCameraPos_15 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = normalize((objSpaceCameraPos_15 - vertexPos_14));
  viewDir_OS_2 = tmpvar_18;
  highp mat3 tmpvar_19;
  tmpvar_19[0] = _Object2World[0].xyz;
  tmpvar_19[1] = _Object2World[1].xyz;
  tmpvar_19[2] = _Object2World[2].xyz;
  mediump float tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_20 = tmpvar_21;
  mediump float tmpvar_22;
  tmpvar_22 = (tmpvar_20 * tmpvar_20);
  tmpvar_5.x = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (0.0, dot (normalize(
    (tmpvar_19 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_7 = tmpvar_24;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_10;
  tmpvar_10 = min (0.0, (tmpvar_9.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_11;
  tmpvar_11 = ((tmpvar_10 * tmpvar_10) * 0.001);
  highp float tmpvar_12;
  tmpvar_12 = (max (0.0, (
    abs(tmpvar_9.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_9.x));
  pos_4.zw = tmpvar_9.zw;
  highp vec2 tmpvar_13;
  tmpvar_13.x = (_V_CW_Y_Bend_Size * tmpvar_11);
  tmpvar_13.y = ((_V_CW_X_Bend_Size * tmpvar_11) + ((
    (tmpvar_12 * tmpvar_12)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_9.xy + tmpvar_13);
  highp vec2 tmpvar_14;
  tmpvar_14 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_14;
  mediump vec3 vertexPos_15;
  vertexPos_15 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_18;
  tmpvar_18 = (_World2Object * tmpvar_17).xyz;
  objSpaceCameraPos_16 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = normalize((objSpaceCameraPos_16 - vertexPos_15));
  viewDir_OS_3 = tmpvar_19;
  highp vec3 tmpvar_20;
  highp vec4 cse_21;
  cse_21 = (_Object2World * _glesVertex);
  tmpvar_20 = cse_21.xyz;
  pos_WS_2 = tmpvar_20;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_23;
  tmpvar_23 = normalize((tmpvar_22 * _glesNormal));
  mediump float tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_24 = tmpvar_25;
  mediump float tmpvar_26;
  tmpvar_26 = (tmpvar_24 * tmpvar_24);
  tmpvar_6.x = tmpvar_26;
  highp vec3 lightColor0_27;
  lightColor0_27 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_28;
  lightColor1_28 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_29;
  lightColor2_29 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_30;
  lightColor3_30 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_31;
  lightAttenSq_31 = unity_4LightAtten0;
  highp vec3 pos_32;
  pos_32 = pos_WS_2;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosX0 - pos_32.x);
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosY0 - pos_32.y);
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_4LightPosZ0 - pos_32.z);
  highp vec4 tmpvar_36;
  tmpvar_36 = (((tmpvar_33 * tmpvar_33) + (tmpvar_34 * tmpvar_34)) + (tmpvar_35 * tmpvar_35));
  highp vec4 tmpvar_37;
  tmpvar_37 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_33 * tmpvar_23.x) + (tmpvar_34 * tmpvar_23.y)) + (tmpvar_35 * tmpvar_23.z))
   * 
    inversesqrt(tmpvar_36)
  )) * (1.0/((1.0 + 
    (tmpvar_36 * lightAttenSq_31)
  ))));
  highp vec3 tmpvar_38;
  tmpvar_38 = (((
    (lightColor0_27 * tmpvar_37.x)
   + 
    (lightColor1_28 * tmpvar_37.y)
  ) + (lightColor2_29 * tmpvar_37.z)) + (lightColor3_30 * tmpvar_37.w));
  tmpvar_7.xyz = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_23, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_39;
  highp vec4 tmpvar_40;
  tmpvar_40 = (unity_World2Shadow[0] * cse_21);
  tmpvar_8 = tmpvar_40;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * retColor_2.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_10;
  tmpvar_10 = min (0.0, (tmpvar_9.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_11;
  tmpvar_11 = ((tmpvar_10 * tmpvar_10) * 0.001);
  highp float tmpvar_12;
  tmpvar_12 = (max (0.0, (
    abs(tmpvar_9.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_9.x));
  pos_4.zw = tmpvar_9.zw;
  highp vec2 tmpvar_13;
  tmpvar_13.x = (_V_CW_Y_Bend_Size * tmpvar_11);
  tmpvar_13.y = ((_V_CW_X_Bend_Size * tmpvar_11) + ((
    (tmpvar_12 * tmpvar_12)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_9.xy + tmpvar_13);
  highp vec2 tmpvar_14;
  tmpvar_14 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_14;
  mediump vec3 vertexPos_15;
  vertexPos_15 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_18;
  tmpvar_18 = (_World2Object * tmpvar_17).xyz;
  objSpaceCameraPos_16 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = normalize((objSpaceCameraPos_16 - vertexPos_15));
  viewDir_OS_3 = tmpvar_19;
  highp vec3 tmpvar_20;
  highp vec4 cse_21;
  cse_21 = (_Object2World * _glesVertex);
  tmpvar_20 = cse_21.xyz;
  pos_WS_2 = tmpvar_20;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_23;
  tmpvar_23 = normalize((tmpvar_22 * _glesNormal));
  mediump float tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_24 = tmpvar_25;
  mediump float tmpvar_26;
  tmpvar_26 = (tmpvar_24 * tmpvar_24);
  tmpvar_6.x = tmpvar_26;
  highp vec3 lightColor0_27;
  lightColor0_27 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_28;
  lightColor1_28 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_29;
  lightColor2_29 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_30;
  lightColor3_30 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_31;
  lightAttenSq_31 = unity_4LightAtten0;
  highp vec3 pos_32;
  pos_32 = pos_WS_2;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosX0 - pos_32.x);
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosY0 - pos_32.y);
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_4LightPosZ0 - pos_32.z);
  highp vec4 tmpvar_36;
  tmpvar_36 = (((tmpvar_33 * tmpvar_33) + (tmpvar_34 * tmpvar_34)) + (tmpvar_35 * tmpvar_35));
  highp vec4 tmpvar_37;
  tmpvar_37 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_33 * tmpvar_23.x) + (tmpvar_34 * tmpvar_23.y)) + (tmpvar_35 * tmpvar_23.z))
   * 
    inversesqrt(tmpvar_36)
  )) * (1.0/((1.0 + 
    (tmpvar_36 * lightAttenSq_31)
  ))));
  highp vec3 tmpvar_38;
  tmpvar_38 = (((
    (lightColor0_27 * tmpvar_37.x)
   + 
    (lightColor1_28 * tmpvar_37.y)
  ) + (lightColor2_29 * tmpvar_37.z)) + (lightColor3_30 * tmpvar_37.w));
  tmpvar_7.xyz = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_23, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_39;
  highp vec4 tmpvar_40;
  tmpvar_40 = (unity_World2Shadow[0] * cse_21);
  tmpvar_8 = tmpvar_40;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_10;
  tmpvar_10 = min (0.0, (tmpvar_9.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_11;
  tmpvar_11 = ((tmpvar_10 * tmpvar_10) * 0.001);
  highp float tmpvar_12;
  tmpvar_12 = (max (0.0, (
    abs(tmpvar_9.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_9.x));
  pos_4.zw = tmpvar_9.zw;
  highp vec2 tmpvar_13;
  tmpvar_13.x = (_V_CW_Y_Bend_Size * tmpvar_11);
  tmpvar_13.y = ((_V_CW_X_Bend_Size * tmpvar_11) + ((
    (tmpvar_12 * tmpvar_12)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_9.xy + tmpvar_13);
  highp vec2 tmpvar_14;
  tmpvar_14 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_14;
  mediump vec3 vertexPos_15;
  vertexPos_15 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_18;
  tmpvar_18 = (_World2Object * tmpvar_17).xyz;
  objSpaceCameraPos_16 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = normalize((objSpaceCameraPos_16 - vertexPos_15));
  viewDir_OS_3 = tmpvar_19;
  highp vec3 tmpvar_20;
  highp vec4 cse_21;
  cse_21 = (_Object2World * _glesVertex);
  tmpvar_20 = cse_21.xyz;
  pos_WS_2 = tmpvar_20;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_23;
  tmpvar_23 = normalize((tmpvar_22 * _glesNormal));
  mediump float tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_24 = tmpvar_25;
  mediump float tmpvar_26;
  tmpvar_26 = (tmpvar_24 * tmpvar_24);
  tmpvar_6.x = tmpvar_26;
  highp vec3 lightColor0_27;
  lightColor0_27 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_28;
  lightColor1_28 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_29;
  lightColor2_29 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_30;
  lightColor3_30 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_31;
  lightAttenSq_31 = unity_4LightAtten0;
  highp vec3 pos_32;
  pos_32 = pos_WS_2;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosX0 - pos_32.x);
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosY0 - pos_32.y);
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_4LightPosZ0 - pos_32.z);
  highp vec4 tmpvar_36;
  tmpvar_36 = (((tmpvar_33 * tmpvar_33) + (tmpvar_34 * tmpvar_34)) + (tmpvar_35 * tmpvar_35));
  highp vec4 tmpvar_37;
  tmpvar_37 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_33 * tmpvar_23.x) + (tmpvar_34 * tmpvar_23.y)) + (tmpvar_35 * tmpvar_23.z))
   * 
    inversesqrt(tmpvar_36)
  )) * (1.0/((1.0 + 
    (tmpvar_36 * lightAttenSq_31)
  ))));
  highp vec3 tmpvar_38;
  tmpvar_38 = (((
    (lightColor0_27 * tmpvar_37.x)
   + 
    (lightColor1_28 * tmpvar_37.y)
  ) + (lightColor2_29 * tmpvar_37.z)) + (lightColor3_30 * tmpvar_37.w));
  tmpvar_7.xyz = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_23, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_39;
  highp vec4 tmpvar_40;
  tmpvar_40 = (unity_World2Shadow[0] * cse_21);
  tmpvar_8 = tmpvar_40;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_11;
  retColor_2.xyz = (tmpvar_11 * retColor_2.xyz);
  mediump vec3 tmpvar_12;
  tmpvar_12 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_12;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_OFF" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  lowp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_10;
  tmpvar_10 = min (0.0, (tmpvar_9.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_11;
  tmpvar_11 = ((tmpvar_10 * tmpvar_10) * 0.001);
  highp float tmpvar_12;
  tmpvar_12 = (max (0.0, (
    abs(tmpvar_9.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_9.x));
  pos_4.zw = tmpvar_9.zw;
  highp vec2 tmpvar_13;
  tmpvar_13.x = (_V_CW_Y_Bend_Size * tmpvar_11);
  tmpvar_13.y = ((_V_CW_X_Bend_Size * tmpvar_11) + ((
    (tmpvar_12 * tmpvar_12)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_9.xy + tmpvar_13);
  highp vec2 tmpvar_14;
  tmpvar_14 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_14;
  mediump vec3 vertexPos_15;
  vertexPos_15 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_18;
  tmpvar_18 = (_World2Object * tmpvar_17).xyz;
  objSpaceCameraPos_16 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = normalize((objSpaceCameraPos_16 - vertexPos_15));
  viewDir_OS_3 = tmpvar_19;
  highp vec3 tmpvar_20;
  highp vec4 cse_21;
  cse_21 = (_Object2World * _glesVertex);
  tmpvar_20 = cse_21.xyz;
  pos_WS_2 = tmpvar_20;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_23;
  tmpvar_23 = normalize((tmpvar_22 * _glesNormal));
  mediump float tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_24 = tmpvar_25;
  mediump float tmpvar_26;
  tmpvar_26 = (tmpvar_24 * tmpvar_24);
  tmpvar_6.x = tmpvar_26;
  highp vec3 lightColor0_27;
  lightColor0_27 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_28;
  lightColor1_28 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_29;
  lightColor2_29 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_30;
  lightColor3_30 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_31;
  lightAttenSq_31 = unity_4LightAtten0;
  highp vec3 pos_32;
  pos_32 = pos_WS_2;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosX0 - pos_32.x);
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosY0 - pos_32.y);
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_4LightPosZ0 - pos_32.z);
  highp vec4 tmpvar_36;
  tmpvar_36 = (((tmpvar_33 * tmpvar_33) + (tmpvar_34 * tmpvar_34)) + (tmpvar_35 * tmpvar_35));
  highp vec4 tmpvar_37;
  tmpvar_37 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_33 * tmpvar_23.x) + (tmpvar_34 * tmpvar_23.y)) + (tmpvar_35 * tmpvar_23.z))
   * 
    inversesqrt(tmpvar_36)
  )) * (1.0/((1.0 + 
    (tmpvar_36 * lightAttenSq_31)
  ))));
  highp vec3 tmpvar_38;
  tmpvar_38 = (((
    (lightColor0_27 * tmpvar_37.x)
   + 
    (lightColor1_28 * tmpvar_37.y)
  ) + (lightColor2_29 * tmpvar_37.z)) + (lightColor3_30 * tmpvar_37.w));
  tmpvar_7.xyz = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_23, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_39;
  highp vec4 tmpvar_40;
  tmpvar_40 = (unity_World2Shadow[0] * cse_21);
  tmpvar_8 = tmpvar_40;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * retColor_2.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec4 tmpvar_7;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_7.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_3.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_13;
  mediump vec3 vertexPos_14;
  vertexPos_14 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_15;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_17;
  tmpvar_17 = (_World2Object * tmpvar_16).xyz;
  objSpaceCameraPos_15 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = normalize((objSpaceCameraPos_15 - vertexPos_14));
  viewDir_OS_2 = tmpvar_18;
  highp mat3 tmpvar_19;
  tmpvar_19[0] = _Object2World[0].xyz;
  tmpvar_19[1] = _Object2World[1].xyz;
  tmpvar_19[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize((tmpvar_19 * _glesNormal));
  tmpvar_6 = tmpvar_20;
  mediump float tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_21 = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = (tmpvar_21 * tmpvar_21);
  tmpvar_5.x = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = max (0.0, dot (tmpvar_20, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_24;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec4 tmpvar_7;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_7.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_3.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_13;
  mediump vec3 vertexPos_14;
  vertexPos_14 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_15;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_17;
  tmpvar_17 = (_World2Object * tmpvar_16).xyz;
  objSpaceCameraPos_15 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = normalize((objSpaceCameraPos_15 - vertexPos_14));
  viewDir_OS_2 = tmpvar_18;
  highp mat3 tmpvar_19;
  tmpvar_19[0] = _Object2World[0].xyz;
  tmpvar_19[1] = _Object2World[1].xyz;
  tmpvar_19[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize((tmpvar_19 * _glesNormal));
  tmpvar_6 = tmpvar_20;
  mediump float tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_21 = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = (tmpvar_21 * tmpvar_21);
  tmpvar_5.x = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = max (0.0, dot (tmpvar_20, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_24;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec4 tmpvar_7;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_7.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_3.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_13;
  mediump vec3 vertexPos_14;
  vertexPos_14 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_15;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_17;
  tmpvar_17 = (_World2Object * tmpvar_16).xyz;
  objSpaceCameraPos_15 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = normalize((objSpaceCameraPos_15 - vertexPos_14));
  viewDir_OS_2 = tmpvar_18;
  highp mat3 tmpvar_19;
  tmpvar_19[0] = _Object2World[0].xyz;
  tmpvar_19[1] = _Object2World[1].xyz;
  tmpvar_19[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize((tmpvar_19 * _glesNormal));
  tmpvar_6 = tmpvar_20;
  mediump float tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_21 = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = (tmpvar_21 * tmpvar_21);
  tmpvar_5.x = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = max (0.0, dot (tmpvar_20, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_24;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec4 tmpvar_7;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_7.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_3.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_13;
  mediump vec3 vertexPos_14;
  vertexPos_14 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_15;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_17;
  tmpvar_17 = (_World2Object * tmpvar_16).xyz;
  objSpaceCameraPos_15 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = normalize((objSpaceCameraPos_15 - vertexPos_14));
  viewDir_OS_2 = tmpvar_18;
  highp mat3 tmpvar_19;
  tmpvar_19[0] = _Object2World[0].xyz;
  tmpvar_19[1] = _Object2World[1].xyz;
  tmpvar_19[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize((tmpvar_19 * _glesNormal));
  tmpvar_6 = tmpvar_20;
  mediump float tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_21 = tmpvar_22;
  mediump float tmpvar_23;
  tmpvar_23 = (tmpvar_21 * tmpvar_21);
  tmpvar_5.x = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = max (0.0, dot (tmpvar_20, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_24;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_7.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_10;
  tmpvar_10 = min (0.0, (tmpvar_9.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_11;
  tmpvar_11 = ((tmpvar_10 * tmpvar_10) * 0.001);
  highp float tmpvar_12;
  tmpvar_12 = (max (0.0, (
    abs(tmpvar_9.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_9.x));
  pos_3.zw = tmpvar_9.zw;
  highp vec2 tmpvar_13;
  tmpvar_13.x = (_V_CW_Y_Bend_Size * tmpvar_11);
  tmpvar_13.y = ((_V_CW_X_Bend_Size * tmpvar_11) + ((
    (tmpvar_12 * tmpvar_12)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_9.xy + tmpvar_13);
  highp vec2 tmpvar_14;
  tmpvar_14 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_14;
  mediump vec3 vertexPos_15;
  vertexPos_15 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_18;
  tmpvar_18 = (_World2Object * tmpvar_17).xyz;
  objSpaceCameraPos_16 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = normalize((objSpaceCameraPos_16 - vertexPos_15));
  viewDir_OS_2 = tmpvar_19;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize((tmpvar_20 * _glesNormal));
  tmpvar_6 = tmpvar_21;
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = (tmpvar_22 * tmpvar_22);
  tmpvar_5.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_21, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_26;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_7.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_10;
  tmpvar_10 = min (0.0, (tmpvar_9.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_11;
  tmpvar_11 = ((tmpvar_10 * tmpvar_10) * 0.001);
  highp float tmpvar_12;
  tmpvar_12 = (max (0.0, (
    abs(tmpvar_9.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_9.x));
  pos_3.zw = tmpvar_9.zw;
  highp vec2 tmpvar_13;
  tmpvar_13.x = (_V_CW_Y_Bend_Size * tmpvar_11);
  tmpvar_13.y = ((_V_CW_X_Bend_Size * tmpvar_11) + ((
    (tmpvar_12 * tmpvar_12)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_9.xy + tmpvar_13);
  highp vec2 tmpvar_14;
  tmpvar_14 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_14;
  mediump vec3 vertexPos_15;
  vertexPos_15 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_18;
  tmpvar_18 = (_World2Object * tmpvar_17).xyz;
  objSpaceCameraPos_16 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = normalize((objSpaceCameraPos_16 - vertexPos_15));
  viewDir_OS_2 = tmpvar_19;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize((tmpvar_20 * _glesNormal));
  tmpvar_6 = tmpvar_21;
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = (tmpvar_22 * tmpvar_22);
  tmpvar_5.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_21, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_26;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec3 tmpvar_7;
  lowp vec4 tmpvar_8;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_10;
  tmpvar_10 = min (0.0, (tmpvar_9.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_11;
  tmpvar_11 = ((tmpvar_10 * tmpvar_10) * 0.001);
  highp float tmpvar_12;
  tmpvar_12 = (max (0.0, (
    abs(tmpvar_9.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_9.x));
  pos_4.zw = tmpvar_9.zw;
  highp vec2 tmpvar_13;
  tmpvar_13.x = (_V_CW_Y_Bend_Size * tmpvar_11);
  tmpvar_13.y = ((_V_CW_X_Bend_Size * tmpvar_11) + ((
    (tmpvar_12 * tmpvar_12)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_9.xy + tmpvar_13);
  highp vec2 tmpvar_14;
  tmpvar_14 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_14;
  mediump vec3 vertexPos_15;
  vertexPos_15 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_18;
  tmpvar_18 = (_World2Object * tmpvar_17).xyz;
  objSpaceCameraPos_16 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = normalize((objSpaceCameraPos_16 - vertexPos_15));
  viewDir_OS_3 = tmpvar_19;
  highp vec3 tmpvar_20;
  tmpvar_20 = (_Object2World * _glesVertex).xyz;
  pos_WS_2 = tmpvar_20;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_22;
  tmpvar_22 = normalize((tmpvar_21 * _glesNormal));
  tmpvar_7 = tmpvar_22;
  mediump float tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_23 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_23 * tmpvar_23);
  tmpvar_6.x = tmpvar_25;
  highp vec3 lightColor0_26;
  lightColor0_26 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_27;
  lightColor1_27 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_28;
  lightColor2_28 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_29;
  lightColor3_29 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_30;
  lightAttenSq_30 = unity_4LightAtten0;
  highp vec3 pos_31;
  pos_31 = pos_WS_2;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosX0 - pos_31.x);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosY0 - pos_31.y);
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosZ0 - pos_31.z);
  highp vec4 tmpvar_35;
  tmpvar_35 = (((tmpvar_32 * tmpvar_32) + (tmpvar_33 * tmpvar_33)) + (tmpvar_34 * tmpvar_34));
  highp vec4 tmpvar_36;
  tmpvar_36 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_32 * tmpvar_22.x) + (tmpvar_33 * tmpvar_22.y)) + (tmpvar_34 * tmpvar_22.z))
   * 
    inversesqrt(tmpvar_35)
  )) * (1.0/((1.0 + 
    (tmpvar_35 * lightAttenSq_30)
  ))));
  highp vec3 tmpvar_37;
  tmpvar_37 = (((
    (lightColor0_26 * tmpvar_36.x)
   + 
    (lightColor1_27 * tmpvar_36.y)
  ) + (lightColor2_28 * tmpvar_36.z)) + (lightColor3_29 * tmpvar_36.w));
  tmpvar_8.xyz = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_22, _WorldSpaceLightPos0.xyz));
  tmpvar_8.w = tmpvar_38;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec3 tmpvar_7;
  lowp vec4 tmpvar_8;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_10;
  tmpvar_10 = min (0.0, (tmpvar_9.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_11;
  tmpvar_11 = ((tmpvar_10 * tmpvar_10) * 0.001);
  highp float tmpvar_12;
  tmpvar_12 = (max (0.0, (
    abs(tmpvar_9.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_9.x));
  pos_4.zw = tmpvar_9.zw;
  highp vec2 tmpvar_13;
  tmpvar_13.x = (_V_CW_Y_Bend_Size * tmpvar_11);
  tmpvar_13.y = ((_V_CW_X_Bend_Size * tmpvar_11) + ((
    (tmpvar_12 * tmpvar_12)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_9.xy + tmpvar_13);
  highp vec2 tmpvar_14;
  tmpvar_14 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_14;
  mediump vec3 vertexPos_15;
  vertexPos_15 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_18;
  tmpvar_18 = (_World2Object * tmpvar_17).xyz;
  objSpaceCameraPos_16 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = normalize((objSpaceCameraPos_16 - vertexPos_15));
  viewDir_OS_3 = tmpvar_19;
  highp vec3 tmpvar_20;
  tmpvar_20 = (_Object2World * _glesVertex).xyz;
  pos_WS_2 = tmpvar_20;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_22;
  tmpvar_22 = normalize((tmpvar_21 * _glesNormal));
  tmpvar_7 = tmpvar_22;
  mediump float tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_23 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_23 * tmpvar_23);
  tmpvar_6.x = tmpvar_25;
  highp vec3 lightColor0_26;
  lightColor0_26 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_27;
  lightColor1_27 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_28;
  lightColor2_28 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_29;
  lightColor3_29 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_30;
  lightAttenSq_30 = unity_4LightAtten0;
  highp vec3 pos_31;
  pos_31 = pos_WS_2;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosX0 - pos_31.x);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosY0 - pos_31.y);
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosZ0 - pos_31.z);
  highp vec4 tmpvar_35;
  tmpvar_35 = (((tmpvar_32 * tmpvar_32) + (tmpvar_33 * tmpvar_33)) + (tmpvar_34 * tmpvar_34));
  highp vec4 tmpvar_36;
  tmpvar_36 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_32 * tmpvar_22.x) + (tmpvar_33 * tmpvar_22.y)) + (tmpvar_34 * tmpvar_22.z))
   * 
    inversesqrt(tmpvar_35)
  )) * (1.0/((1.0 + 
    (tmpvar_35 * lightAttenSq_30)
  ))));
  highp vec3 tmpvar_37;
  tmpvar_37 = (((
    (lightColor0_26 * tmpvar_36.x)
   + 
    (lightColor1_27 * tmpvar_36.y)
  ) + (lightColor2_28 * tmpvar_36.z)) + (lightColor3_29 * tmpvar_36.w));
  tmpvar_8.xyz = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_22, _WorldSpaceLightPos0.xyz));
  tmpvar_8.w = tmpvar_38;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec3 tmpvar_7;
  lowp vec4 tmpvar_8;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_10;
  tmpvar_10 = min (0.0, (tmpvar_9.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_11;
  tmpvar_11 = ((tmpvar_10 * tmpvar_10) * 0.001);
  highp float tmpvar_12;
  tmpvar_12 = (max (0.0, (
    abs(tmpvar_9.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_9.x));
  pos_4.zw = tmpvar_9.zw;
  highp vec2 tmpvar_13;
  tmpvar_13.x = (_V_CW_Y_Bend_Size * tmpvar_11);
  tmpvar_13.y = ((_V_CW_X_Bend_Size * tmpvar_11) + ((
    (tmpvar_12 * tmpvar_12)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_9.xy + tmpvar_13);
  highp vec2 tmpvar_14;
  tmpvar_14 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_14;
  mediump vec3 vertexPos_15;
  vertexPos_15 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_18;
  tmpvar_18 = (_World2Object * tmpvar_17).xyz;
  objSpaceCameraPos_16 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = normalize((objSpaceCameraPos_16 - vertexPos_15));
  viewDir_OS_3 = tmpvar_19;
  highp vec3 tmpvar_20;
  tmpvar_20 = (_Object2World * _glesVertex).xyz;
  pos_WS_2 = tmpvar_20;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_22;
  tmpvar_22 = normalize((tmpvar_21 * _glesNormal));
  tmpvar_7 = tmpvar_22;
  mediump float tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_23 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_23 * tmpvar_23);
  tmpvar_6.x = tmpvar_25;
  highp vec3 lightColor0_26;
  lightColor0_26 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_27;
  lightColor1_27 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_28;
  lightColor2_28 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_29;
  lightColor3_29 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_30;
  lightAttenSq_30 = unity_4LightAtten0;
  highp vec3 pos_31;
  pos_31 = pos_WS_2;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosX0 - pos_31.x);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosY0 - pos_31.y);
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosZ0 - pos_31.z);
  highp vec4 tmpvar_35;
  tmpvar_35 = (((tmpvar_32 * tmpvar_32) + (tmpvar_33 * tmpvar_33)) + (tmpvar_34 * tmpvar_34));
  highp vec4 tmpvar_36;
  tmpvar_36 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_32 * tmpvar_22.x) + (tmpvar_33 * tmpvar_22.y)) + (tmpvar_34 * tmpvar_22.z))
   * 
    inversesqrt(tmpvar_35)
  )) * (1.0/((1.0 + 
    (tmpvar_35 * lightAttenSq_30)
  ))));
  highp vec3 tmpvar_37;
  tmpvar_37 = (((
    (lightColor0_26 * tmpvar_36.x)
   + 
    (lightColor1_27 * tmpvar_36.y)
  ) + (lightColor2_28 * tmpvar_36.z)) + (lightColor3_29 * tmpvar_36.w));
  tmpvar_8.xyz = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_22, _WorldSpaceLightPos0.xyz));
  tmpvar_8.w = tmpvar_38;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec3 tmpvar_7;
  lowp vec4 tmpvar_8;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_10;
  tmpvar_10 = min (0.0, (tmpvar_9.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_11;
  tmpvar_11 = ((tmpvar_10 * tmpvar_10) * 0.001);
  highp float tmpvar_12;
  tmpvar_12 = (max (0.0, (
    abs(tmpvar_9.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_9.x));
  pos_4.zw = tmpvar_9.zw;
  highp vec2 tmpvar_13;
  tmpvar_13.x = (_V_CW_Y_Bend_Size * tmpvar_11);
  tmpvar_13.y = ((_V_CW_X_Bend_Size * tmpvar_11) + ((
    (tmpvar_12 * tmpvar_12)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_9.xy + tmpvar_13);
  highp vec2 tmpvar_14;
  tmpvar_14 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_14;
  mediump vec3 vertexPos_15;
  vertexPos_15 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_18;
  tmpvar_18 = (_World2Object * tmpvar_17).xyz;
  objSpaceCameraPos_16 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = normalize((objSpaceCameraPos_16 - vertexPos_15));
  viewDir_OS_3 = tmpvar_19;
  highp vec3 tmpvar_20;
  tmpvar_20 = (_Object2World * _glesVertex).xyz;
  pos_WS_2 = tmpvar_20;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_22;
  tmpvar_22 = normalize((tmpvar_21 * _glesNormal));
  tmpvar_7 = tmpvar_22;
  mediump float tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_23 = tmpvar_24;
  mediump float tmpvar_25;
  tmpvar_25 = (tmpvar_23 * tmpvar_23);
  tmpvar_6.x = tmpvar_25;
  highp vec3 lightColor0_26;
  lightColor0_26 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_27;
  lightColor1_27 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_28;
  lightColor2_28 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_29;
  lightColor3_29 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_30;
  lightAttenSq_30 = unity_4LightAtten0;
  highp vec3 pos_31;
  pos_31 = pos_WS_2;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosX0 - pos_31.x);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosY0 - pos_31.y);
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosZ0 - pos_31.z);
  highp vec4 tmpvar_35;
  tmpvar_35 = (((tmpvar_32 * tmpvar_32) + (tmpvar_33 * tmpvar_33)) + (tmpvar_34 * tmpvar_34));
  highp vec4 tmpvar_36;
  tmpvar_36 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_32 * tmpvar_22.x) + (tmpvar_33 * tmpvar_22.y)) + (tmpvar_34 * tmpvar_22.z))
   * 
    inversesqrt(tmpvar_35)
  )) * (1.0/((1.0 + 
    (tmpvar_35 * lightAttenSq_30)
  ))));
  highp vec3 tmpvar_37;
  tmpvar_37 = (((
    (lightColor0_26 * tmpvar_36.x)
   + 
    (lightColor1_27 * tmpvar_36.y)
  ) + (lightColor2_28 * tmpvar_36.z)) + (lightColor3_29 * tmpvar_36.w));
  tmpvar_8.xyz = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_22, _WorldSpaceLightPos0.xyz));
  tmpvar_8.w = tmpvar_38;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 + ((
    ((tmpvar_9.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_10;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_11;
  tmpvar_11 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_11;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec3 tmpvar_7;
  lowp vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_11;
  tmpvar_11 = min (0.0, (tmpvar_10.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_12;
  tmpvar_12 = ((tmpvar_11 * tmpvar_11) * 0.001);
  highp float tmpvar_13;
  tmpvar_13 = (max (0.0, (
    abs(tmpvar_10.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_10.x));
  pos_4.zw = tmpvar_10.zw;
  highp vec2 tmpvar_14;
  tmpvar_14.x = (_V_CW_Y_Bend_Size * tmpvar_12);
  tmpvar_14.y = ((_V_CW_X_Bend_Size * tmpvar_12) + ((
    (tmpvar_13 * tmpvar_13)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_10.xy + tmpvar_14);
  highp vec2 tmpvar_15;
  tmpvar_15 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_15;
  mediump vec3 vertexPos_16;
  vertexPos_16 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_19;
  tmpvar_19 = (_World2Object * tmpvar_18).xyz;
  objSpaceCameraPos_17 = tmpvar_19;
  mediump vec3 tmpvar_20;
  tmpvar_20 = normalize((objSpaceCameraPos_17 - vertexPos_16));
  viewDir_OS_3 = tmpvar_20;
  highp vec3 tmpvar_21;
  highp vec4 cse_22;
  cse_22 = (_Object2World * _glesVertex);
  tmpvar_21 = cse_22.xyz;
  pos_WS_2 = tmpvar_21;
  highp mat3 tmpvar_23;
  tmpvar_23[0] = _Object2World[0].xyz;
  tmpvar_23[1] = _Object2World[1].xyz;
  tmpvar_23[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_24;
  tmpvar_24 = normalize((tmpvar_23 * _glesNormal));
  tmpvar_7 = tmpvar_24;
  mediump float tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_25 = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = (tmpvar_25 * tmpvar_25);
  tmpvar_6.x = tmpvar_27;
  highp vec3 lightColor0_28;
  lightColor0_28 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_29;
  lightColor1_29 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_30;
  lightColor2_30 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_31;
  lightColor3_31 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_32;
  lightAttenSq_32 = unity_4LightAtten0;
  highp vec3 pos_33;
  pos_33 = pos_WS_2;
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosX0 - pos_33.x);
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_4LightPosY0 - pos_33.y);
  highp vec4 tmpvar_36;
  tmpvar_36 = (unity_4LightPosZ0 - pos_33.z);
  highp vec4 tmpvar_37;
  tmpvar_37 = (((tmpvar_34 * tmpvar_34) + (tmpvar_35 * tmpvar_35)) + (tmpvar_36 * tmpvar_36));
  highp vec4 tmpvar_38;
  tmpvar_38 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_34 * tmpvar_24.x) + (tmpvar_35 * tmpvar_24.y)) + (tmpvar_36 * tmpvar_24.z))
   * 
    inversesqrt(tmpvar_37)
  )) * (1.0/((1.0 + 
    (tmpvar_37 * lightAttenSq_32)
  ))));
  highp vec3 tmpvar_39;
  tmpvar_39 = (((
    (lightColor0_28 * tmpvar_38.x)
   + 
    (lightColor1_29 * tmpvar_38.y)
  ) + (lightColor2_30 * tmpvar_38.z)) + (lightColor3_31 * tmpvar_38.w));
  tmpvar_8.xyz = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = max (0.0, dot (tmpvar_24, _WorldSpaceLightPos0.xyz));
  tmpvar_8.w = tmpvar_40;
  highp vec4 tmpvar_41;
  tmpvar_41 = (unity_World2Shadow[0] * cse_22);
  tmpvar_9 = tmpvar_41;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
  xlv_TEXCOORD7 = tmpvar_9;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec3 tmpvar_7;
  lowp vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_11;
  tmpvar_11 = min (0.0, (tmpvar_10.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_12;
  tmpvar_12 = ((tmpvar_11 * tmpvar_11) * 0.001);
  highp float tmpvar_13;
  tmpvar_13 = (max (0.0, (
    abs(tmpvar_10.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_10.x));
  pos_4.zw = tmpvar_10.zw;
  highp vec2 tmpvar_14;
  tmpvar_14.x = (_V_CW_Y_Bend_Size * tmpvar_12);
  tmpvar_14.y = ((_V_CW_X_Bend_Size * tmpvar_12) + ((
    (tmpvar_13 * tmpvar_13)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_10.xy + tmpvar_14);
  highp vec2 tmpvar_15;
  tmpvar_15 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_15;
  mediump vec3 vertexPos_16;
  vertexPos_16 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_19;
  tmpvar_19 = (_World2Object * tmpvar_18).xyz;
  objSpaceCameraPos_17 = tmpvar_19;
  mediump vec3 tmpvar_20;
  tmpvar_20 = normalize((objSpaceCameraPos_17 - vertexPos_16));
  viewDir_OS_3 = tmpvar_20;
  highp vec3 tmpvar_21;
  highp vec4 cse_22;
  cse_22 = (_Object2World * _glesVertex);
  tmpvar_21 = cse_22.xyz;
  pos_WS_2 = tmpvar_21;
  highp mat3 tmpvar_23;
  tmpvar_23[0] = _Object2World[0].xyz;
  tmpvar_23[1] = _Object2World[1].xyz;
  tmpvar_23[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_24;
  tmpvar_24 = normalize((tmpvar_23 * _glesNormal));
  tmpvar_7 = tmpvar_24;
  mediump float tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_25 = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = (tmpvar_25 * tmpvar_25);
  tmpvar_6.x = tmpvar_27;
  highp vec3 lightColor0_28;
  lightColor0_28 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_29;
  lightColor1_29 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_30;
  lightColor2_30 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_31;
  lightColor3_31 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_32;
  lightAttenSq_32 = unity_4LightAtten0;
  highp vec3 pos_33;
  pos_33 = pos_WS_2;
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosX0 - pos_33.x);
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_4LightPosY0 - pos_33.y);
  highp vec4 tmpvar_36;
  tmpvar_36 = (unity_4LightPosZ0 - pos_33.z);
  highp vec4 tmpvar_37;
  tmpvar_37 = (((tmpvar_34 * tmpvar_34) + (tmpvar_35 * tmpvar_35)) + (tmpvar_36 * tmpvar_36));
  highp vec4 tmpvar_38;
  tmpvar_38 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_34 * tmpvar_24.x) + (tmpvar_35 * tmpvar_24.y)) + (tmpvar_36 * tmpvar_24.z))
   * 
    inversesqrt(tmpvar_37)
  )) * (1.0/((1.0 + 
    (tmpvar_37 * lightAttenSq_32)
  ))));
  highp vec3 tmpvar_39;
  tmpvar_39 = (((
    (lightColor0_28 * tmpvar_38.x)
   + 
    (lightColor1_29 * tmpvar_38.y)
  ) + (lightColor2_30 * tmpvar_38.z)) + (lightColor3_31 * tmpvar_38.w));
  tmpvar_8.xyz = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = max (0.0, dot (tmpvar_24, _WorldSpaceLightPos0.xyz));
  tmpvar_8.w = tmpvar_40;
  highp vec4 tmpvar_41;
  tmpvar_41 = (unity_World2Shadow[0] * cse_22);
  tmpvar_9 = tmpvar_41;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
  xlv_TEXCOORD7 = tmpvar_9;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_7.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_10;
  tmpvar_10 = min (0.0, (tmpvar_9.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_11;
  tmpvar_11 = ((tmpvar_10 * tmpvar_10) * 0.001);
  highp float tmpvar_12;
  tmpvar_12 = (max (0.0, (
    abs(tmpvar_9.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_9.x));
  pos_3.zw = tmpvar_9.zw;
  highp vec2 tmpvar_13;
  tmpvar_13.x = (_V_CW_Y_Bend_Size * tmpvar_11);
  tmpvar_13.y = ((_V_CW_X_Bend_Size * tmpvar_11) + ((
    (tmpvar_12 * tmpvar_12)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_9.xy + tmpvar_13);
  highp vec2 tmpvar_14;
  tmpvar_14 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_14;
  mediump vec3 vertexPos_15;
  vertexPos_15 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_18;
  tmpvar_18 = (_World2Object * tmpvar_17).xyz;
  objSpaceCameraPos_16 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = normalize((objSpaceCameraPos_16 - vertexPos_15));
  viewDir_OS_2 = tmpvar_19;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize((tmpvar_20 * _glesNormal));
  tmpvar_6 = tmpvar_21;
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = (tmpvar_22 * tmpvar_22);
  tmpvar_5.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_21, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_26;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_7.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_10;
  tmpvar_10 = min (0.0, (tmpvar_9.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_11;
  tmpvar_11 = ((tmpvar_10 * tmpvar_10) * 0.001);
  highp float tmpvar_12;
  tmpvar_12 = (max (0.0, (
    abs(tmpvar_9.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_9.x));
  pos_3.zw = tmpvar_9.zw;
  highp vec2 tmpvar_13;
  tmpvar_13.x = (_V_CW_Y_Bend_Size * tmpvar_11);
  tmpvar_13.y = ((_V_CW_X_Bend_Size * tmpvar_11) + ((
    (tmpvar_12 * tmpvar_12)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_9.xy + tmpvar_13);
  highp vec2 tmpvar_14;
  tmpvar_14 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_14;
  mediump vec3 vertexPos_15;
  vertexPos_15 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_18;
  tmpvar_18 = (_World2Object * tmpvar_17).xyz;
  objSpaceCameraPos_16 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = normalize((objSpaceCameraPos_16 - vertexPos_15));
  viewDir_OS_2 = tmpvar_19;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize((tmpvar_20 * _glesNormal));
  tmpvar_6 = tmpvar_21;
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = (tmpvar_22 * tmpvar_22);
  tmpvar_5.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_21, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_26;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_7.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_10;
  tmpvar_10 = min (0.0, (tmpvar_9.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_11;
  tmpvar_11 = ((tmpvar_10 * tmpvar_10) * 0.001);
  highp float tmpvar_12;
  tmpvar_12 = (max (0.0, (
    abs(tmpvar_9.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_9.x));
  pos_3.zw = tmpvar_9.zw;
  highp vec2 tmpvar_13;
  tmpvar_13.x = (_V_CW_Y_Bend_Size * tmpvar_11);
  tmpvar_13.y = ((_V_CW_X_Bend_Size * tmpvar_11) + ((
    (tmpvar_12 * tmpvar_12)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_9.xy + tmpvar_13);
  highp vec2 tmpvar_14;
  tmpvar_14 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_14;
  mediump vec3 vertexPos_15;
  vertexPos_15 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_18;
  tmpvar_18 = (_World2Object * tmpvar_17).xyz;
  objSpaceCameraPos_16 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = normalize((objSpaceCameraPos_16 - vertexPos_15));
  viewDir_OS_2 = tmpvar_19;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize((tmpvar_20 * _glesNormal));
  tmpvar_6 = tmpvar_21;
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = (tmpvar_22 * tmpvar_22);
  tmpvar_5.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_21, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_26;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  mediump vec3 tmpvar_6;
  lowp vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_7.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_10;
  tmpvar_10 = min (0.0, (tmpvar_9.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_11;
  tmpvar_11 = ((tmpvar_10 * tmpvar_10) * 0.001);
  highp float tmpvar_12;
  tmpvar_12 = (max (0.0, (
    abs(tmpvar_9.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_9.x));
  pos_3.zw = tmpvar_9.zw;
  highp vec2 tmpvar_13;
  tmpvar_13.x = (_V_CW_Y_Bend_Size * tmpvar_11);
  tmpvar_13.y = ((_V_CW_X_Bend_Size * tmpvar_11) + ((
    (tmpvar_12 * tmpvar_12)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_9.xy + tmpvar_13);
  highp vec2 tmpvar_14;
  tmpvar_14 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_14;
  mediump vec3 vertexPos_15;
  vertexPos_15 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_16;
  highp vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_18;
  tmpvar_18 = (_World2Object * tmpvar_17).xyz;
  objSpaceCameraPos_16 = tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = normalize((objSpaceCameraPos_16 - vertexPos_15));
  viewDir_OS_2 = tmpvar_19;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize((tmpvar_20 * _glesNormal));
  tmpvar_6 = tmpvar_21;
  mediump float tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_22 = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = (tmpvar_22 * tmpvar_22);
  tmpvar_5.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_21, _WorldSpaceLightPos0.xyz));
  tmpvar_7.w = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_26;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = tmpvar_7;
  xlv_TEXCOORD7 = tmpvar_8;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec3 tmpvar_7;
  lowp vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_11;
  tmpvar_11 = min (0.0, (tmpvar_10.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_12;
  tmpvar_12 = ((tmpvar_11 * tmpvar_11) * 0.001);
  highp float tmpvar_13;
  tmpvar_13 = (max (0.0, (
    abs(tmpvar_10.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_10.x));
  pos_4.zw = tmpvar_10.zw;
  highp vec2 tmpvar_14;
  tmpvar_14.x = (_V_CW_Y_Bend_Size * tmpvar_12);
  tmpvar_14.y = ((_V_CW_X_Bend_Size * tmpvar_12) + ((
    (tmpvar_13 * tmpvar_13)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_10.xy + tmpvar_14);
  highp vec2 tmpvar_15;
  tmpvar_15 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_15;
  mediump vec3 vertexPos_16;
  vertexPos_16 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_19;
  tmpvar_19 = (_World2Object * tmpvar_18).xyz;
  objSpaceCameraPos_17 = tmpvar_19;
  mediump vec3 tmpvar_20;
  tmpvar_20 = normalize((objSpaceCameraPos_17 - vertexPos_16));
  viewDir_OS_3 = tmpvar_20;
  highp vec3 tmpvar_21;
  highp vec4 cse_22;
  cse_22 = (_Object2World * _glesVertex);
  tmpvar_21 = cse_22.xyz;
  pos_WS_2 = tmpvar_21;
  highp mat3 tmpvar_23;
  tmpvar_23[0] = _Object2World[0].xyz;
  tmpvar_23[1] = _Object2World[1].xyz;
  tmpvar_23[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_24;
  tmpvar_24 = normalize((tmpvar_23 * _glesNormal));
  tmpvar_7 = tmpvar_24;
  mediump float tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_25 = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = (tmpvar_25 * tmpvar_25);
  tmpvar_6.x = tmpvar_27;
  highp vec3 lightColor0_28;
  lightColor0_28 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_29;
  lightColor1_29 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_30;
  lightColor2_30 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_31;
  lightColor3_31 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_32;
  lightAttenSq_32 = unity_4LightAtten0;
  highp vec3 pos_33;
  pos_33 = pos_WS_2;
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosX0 - pos_33.x);
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_4LightPosY0 - pos_33.y);
  highp vec4 tmpvar_36;
  tmpvar_36 = (unity_4LightPosZ0 - pos_33.z);
  highp vec4 tmpvar_37;
  tmpvar_37 = (((tmpvar_34 * tmpvar_34) + (tmpvar_35 * tmpvar_35)) + (tmpvar_36 * tmpvar_36));
  highp vec4 tmpvar_38;
  tmpvar_38 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_34 * tmpvar_24.x) + (tmpvar_35 * tmpvar_24.y)) + (tmpvar_36 * tmpvar_24.z))
   * 
    inversesqrt(tmpvar_37)
  )) * (1.0/((1.0 + 
    (tmpvar_37 * lightAttenSq_32)
  ))));
  highp vec3 tmpvar_39;
  tmpvar_39 = (((
    (lightColor0_28 * tmpvar_38.x)
   + 
    (lightColor1_29 * tmpvar_38.y)
  ) + (lightColor2_30 * tmpvar_38.z)) + (lightColor3_31 * tmpvar_38.w));
  tmpvar_8.xyz = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = max (0.0, dot (tmpvar_24, _WorldSpaceLightPos0.xyz));
  tmpvar_8.w = tmpvar_40;
  highp vec4 tmpvar_41;
  tmpvar_41 = (unity_World2Shadow[0] * cse_22);
  tmpvar_9 = tmpvar_41;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
  xlv_TEXCOORD7 = tmpvar_9;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec3 tmpvar_7;
  lowp vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_11;
  tmpvar_11 = min (0.0, (tmpvar_10.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_12;
  tmpvar_12 = ((tmpvar_11 * tmpvar_11) * 0.001);
  highp float tmpvar_13;
  tmpvar_13 = (max (0.0, (
    abs(tmpvar_10.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_10.x));
  pos_4.zw = tmpvar_10.zw;
  highp vec2 tmpvar_14;
  tmpvar_14.x = (_V_CW_Y_Bend_Size * tmpvar_12);
  tmpvar_14.y = ((_V_CW_X_Bend_Size * tmpvar_12) + ((
    (tmpvar_13 * tmpvar_13)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_10.xy + tmpvar_14);
  highp vec2 tmpvar_15;
  tmpvar_15 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_15;
  mediump vec3 vertexPos_16;
  vertexPos_16 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_19;
  tmpvar_19 = (_World2Object * tmpvar_18).xyz;
  objSpaceCameraPos_17 = tmpvar_19;
  mediump vec3 tmpvar_20;
  tmpvar_20 = normalize((objSpaceCameraPos_17 - vertexPos_16));
  viewDir_OS_3 = tmpvar_20;
  highp vec3 tmpvar_21;
  highp vec4 cse_22;
  cse_22 = (_Object2World * _glesVertex);
  tmpvar_21 = cse_22.xyz;
  pos_WS_2 = tmpvar_21;
  highp mat3 tmpvar_23;
  tmpvar_23[0] = _Object2World[0].xyz;
  tmpvar_23[1] = _Object2World[1].xyz;
  tmpvar_23[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_24;
  tmpvar_24 = normalize((tmpvar_23 * _glesNormal));
  tmpvar_7 = tmpvar_24;
  mediump float tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_25 = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = (tmpvar_25 * tmpvar_25);
  tmpvar_6.x = tmpvar_27;
  highp vec3 lightColor0_28;
  lightColor0_28 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_29;
  lightColor1_29 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_30;
  lightColor2_30 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_31;
  lightColor3_31 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_32;
  lightAttenSq_32 = unity_4LightAtten0;
  highp vec3 pos_33;
  pos_33 = pos_WS_2;
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosX0 - pos_33.x);
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_4LightPosY0 - pos_33.y);
  highp vec4 tmpvar_36;
  tmpvar_36 = (unity_4LightPosZ0 - pos_33.z);
  highp vec4 tmpvar_37;
  tmpvar_37 = (((tmpvar_34 * tmpvar_34) + (tmpvar_35 * tmpvar_35)) + (tmpvar_36 * tmpvar_36));
  highp vec4 tmpvar_38;
  tmpvar_38 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_34 * tmpvar_24.x) + (tmpvar_35 * tmpvar_24.y)) + (tmpvar_36 * tmpvar_24.z))
   * 
    inversesqrt(tmpvar_37)
  )) * (1.0/((1.0 + 
    (tmpvar_37 * lightAttenSq_32)
  ))));
  highp vec3 tmpvar_39;
  tmpvar_39 = (((
    (lightColor0_28 * tmpvar_38.x)
   + 
    (lightColor1_29 * tmpvar_38.y)
  ) + (lightColor2_30 * tmpvar_38.z)) + (lightColor3_31 * tmpvar_38.w));
  tmpvar_8.xyz = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = max (0.0, dot (tmpvar_24, _WorldSpaceLightPos0.xyz));
  tmpvar_8.w = tmpvar_40;
  highp vec4 tmpvar_41;
  tmpvar_41 = (unity_World2Shadow[0] * cse_22);
  tmpvar_9 = tmpvar_41;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
  xlv_TEXCOORD7 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec3 tmpvar_7;
  lowp vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_11;
  tmpvar_11 = min (0.0, (tmpvar_10.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_12;
  tmpvar_12 = ((tmpvar_11 * tmpvar_11) * 0.001);
  highp float tmpvar_13;
  tmpvar_13 = (max (0.0, (
    abs(tmpvar_10.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_10.x));
  pos_4.zw = tmpvar_10.zw;
  highp vec2 tmpvar_14;
  tmpvar_14.x = (_V_CW_Y_Bend_Size * tmpvar_12);
  tmpvar_14.y = ((_V_CW_X_Bend_Size * tmpvar_12) + ((
    (tmpvar_13 * tmpvar_13)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_10.xy + tmpvar_14);
  highp vec2 tmpvar_15;
  tmpvar_15 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_15;
  mediump vec3 vertexPos_16;
  vertexPos_16 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_19;
  tmpvar_19 = (_World2Object * tmpvar_18).xyz;
  objSpaceCameraPos_17 = tmpvar_19;
  mediump vec3 tmpvar_20;
  tmpvar_20 = normalize((objSpaceCameraPos_17 - vertexPos_16));
  viewDir_OS_3 = tmpvar_20;
  highp vec3 tmpvar_21;
  highp vec4 cse_22;
  cse_22 = (_Object2World * _glesVertex);
  tmpvar_21 = cse_22.xyz;
  pos_WS_2 = tmpvar_21;
  highp mat3 tmpvar_23;
  tmpvar_23[0] = _Object2World[0].xyz;
  tmpvar_23[1] = _Object2World[1].xyz;
  tmpvar_23[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_24;
  tmpvar_24 = normalize((tmpvar_23 * _glesNormal));
  tmpvar_7 = tmpvar_24;
  mediump float tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_25 = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = (tmpvar_25 * tmpvar_25);
  tmpvar_6.x = tmpvar_27;
  highp vec3 lightColor0_28;
  lightColor0_28 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_29;
  lightColor1_29 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_30;
  lightColor2_30 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_31;
  lightColor3_31 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_32;
  lightAttenSq_32 = unity_4LightAtten0;
  highp vec3 pos_33;
  pos_33 = pos_WS_2;
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosX0 - pos_33.x);
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_4LightPosY0 - pos_33.y);
  highp vec4 tmpvar_36;
  tmpvar_36 = (unity_4LightPosZ0 - pos_33.z);
  highp vec4 tmpvar_37;
  tmpvar_37 = (((tmpvar_34 * tmpvar_34) + (tmpvar_35 * tmpvar_35)) + (tmpvar_36 * tmpvar_36));
  highp vec4 tmpvar_38;
  tmpvar_38 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_34 * tmpvar_24.x) + (tmpvar_35 * tmpvar_24.y)) + (tmpvar_36 * tmpvar_24.z))
   * 
    inversesqrt(tmpvar_37)
  )) * (1.0/((1.0 + 
    (tmpvar_37 * lightAttenSq_32)
  ))));
  highp vec3 tmpvar_39;
  tmpvar_39 = (((
    (lightColor0_28 * tmpvar_38.x)
   + 
    (lightColor1_29 * tmpvar_38.y)
  ) + (lightColor2_30 * tmpvar_38.z)) + (lightColor3_31 * tmpvar_38.w));
  tmpvar_8.xyz = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = max (0.0, dot (tmpvar_24, _WorldSpaceLightPos0.xyz));
  tmpvar_8.w = tmpvar_40;
  highp vec4 tmpvar_41;
  tmpvar_41 = (unity_World2Shadow[0] * cse_22);
  tmpvar_9 = tmpvar_41;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
  xlv_TEXCOORD7 = tmpvar_9;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying mediump vec3 xlv_TEXCOORD3;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  lowp float tmpvar_8;
  tmpvar_8 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_12;
  tmpvar_12 = textureCube (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 + ((
    ((tmpvar_12.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_13;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_14;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_VERTEX_COLOR_OFF" "V_CW_IBL_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out mediump vec3 xlv_TEXCOORD3;
out lowp vec4 xlv_TEXCOORD4;
out mediump vec4 xlv_TEXCOORD7;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  mediump vec3 pos_WS_2;
  highp vec3 viewDir_OS_3;
  highp vec4 pos_4;
  mediump vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec3 tmpvar_7;
  lowp vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_6.yzw = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_11;
  tmpvar_11 = min (0.0, (tmpvar_10.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_12;
  tmpvar_12 = ((tmpvar_11 * tmpvar_11) * 0.001);
  highp float tmpvar_13;
  tmpvar_13 = (max (0.0, (
    abs(tmpvar_10.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_10.x));
  pos_4.zw = tmpvar_10.zw;
  highp vec2 tmpvar_14;
  tmpvar_14.x = (_V_CW_Y_Bend_Size * tmpvar_12);
  tmpvar_14.y = ((_V_CW_X_Bend_Size * tmpvar_12) + ((
    (tmpvar_13 * tmpvar_13)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_4.xy = (tmpvar_10.xy + tmpvar_14);
  highp vec2 tmpvar_15;
  tmpvar_15 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_5.xy = tmpvar_15;
  mediump vec3 vertexPos_16;
  vertexPos_16 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_19;
  tmpvar_19 = (_World2Object * tmpvar_18).xyz;
  objSpaceCameraPos_17 = tmpvar_19;
  mediump vec3 tmpvar_20;
  tmpvar_20 = normalize((objSpaceCameraPos_17 - vertexPos_16));
  viewDir_OS_3 = tmpvar_20;
  highp vec3 tmpvar_21;
  highp vec4 cse_22;
  cse_22 = (_Object2World * _glesVertex);
  tmpvar_21 = cse_22.xyz;
  pos_WS_2 = tmpvar_21;
  highp mat3 tmpvar_23;
  tmpvar_23[0] = _Object2World[0].xyz;
  tmpvar_23[1] = _Object2World[1].xyz;
  tmpvar_23[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_24;
  tmpvar_24 = normalize((tmpvar_23 * _glesNormal));
  tmpvar_7 = tmpvar_24;
  mediump float tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = clamp ((dot (_glesNormal, viewDir_OS_3) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_25 = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = (tmpvar_25 * tmpvar_25);
  tmpvar_6.x = tmpvar_27;
  highp vec3 lightColor0_28;
  lightColor0_28 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_29;
  lightColor1_29 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_30;
  lightColor2_30 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_31;
  lightColor3_31 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_32;
  lightAttenSq_32 = unity_4LightAtten0;
  highp vec3 pos_33;
  pos_33 = pos_WS_2;
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosX0 - pos_33.x);
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_4LightPosY0 - pos_33.y);
  highp vec4 tmpvar_36;
  tmpvar_36 = (unity_4LightPosZ0 - pos_33.z);
  highp vec4 tmpvar_37;
  tmpvar_37 = (((tmpvar_34 * tmpvar_34) + (tmpvar_35 * tmpvar_35)) + (tmpvar_36 * tmpvar_36));
  highp vec4 tmpvar_38;
  tmpvar_38 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_34 * tmpvar_24.x) + (tmpvar_35 * tmpvar_24.y)) + (tmpvar_36 * tmpvar_24.z))
   * 
    inversesqrt(tmpvar_37)
  )) * (1.0/((1.0 + 
    (tmpvar_37 * lightAttenSq_32)
  ))));
  highp vec3 tmpvar_39;
  tmpvar_39 = (((
    (lightColor0_28 * tmpvar_38.x)
   + 
    (lightColor1_29 * tmpvar_38.y)
  ) + (lightColor2_30 * tmpvar_38.z)) + (lightColor3_31 * tmpvar_38.w));
  tmpvar_8.xyz = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = max (0.0, dot (tmpvar_24, _WorldSpaceLightPos0.xyz));
  tmpvar_8.w = tmpvar_40;
  highp vec4 tmpvar_41;
  tmpvar_41 = (unity_World2Shadow[0] * cse_22);
  tmpvar_9 = tmpvar_41;
  gl_Position = (glstate_matrix_projection * pos_4);
  xlv_TEXCOORD0 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = tmpvar_7;
  xlv_TEXCOORD4 = tmpvar_8;
  xlv_TEXCOORD7 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform mediump float _V_CW_IBL_Intensity;
uniform mediump float _V_CW_IBL_Contrast;
uniform lowp samplerCube _V_CW_IBL_Cube;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in mediump vec3 xlv_TEXCOORD3;
in lowp vec4 xlv_TEXCOORD4;
in mediump vec4 xlv_TEXCOORD7;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = retColor_2.xyz;
  lowp float shadow_7;
  mediump float tmpvar_8;
  tmpvar_8 = texture (_ShadowMapTexture, xlv_TEXCOORD7.xyz);
  lowp float tmpvar_9;
  tmpvar_9 = tmpvar_8;
  mediump float tmpvar_10;
  tmpvar_10 = (_LightShadowData.x + (tmpvar_9 * (1.0 - _LightShadowData.x)));
  shadow_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * shadow_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_V_CW_IBL_Cube, xlv_TEXCOORD3);
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 + ((
    ((tmpvar_13.xyz - 0.5) * _V_CW_IBL_Contrast)
   + 0.5) * _V_CW_IBL_Intensity));
  diff_1 = tmpvar_14;
  retColor_2.xyz = (diff_1 * retColor_2.xyz);
  mediump vec3 tmpvar_15;
  tmpvar_15 = (retColor_2.xyz + ((tmpvar_6 * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_15;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_3.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_12;
  mediump vec3 vertexPos_13;
  vertexPos_13 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_14;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_16;
  tmpvar_16 = (_World2Object * tmpvar_15).xyz;
  objSpaceCameraPos_14 = tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_17 = normalize((objSpaceCameraPos_14 - vertexPos_13));
  viewDir_OS_2 = tmpvar_17;
  highp mat3 tmpvar_18;
  tmpvar_18[0] = _Object2World[0].xyz;
  tmpvar_18[1] = _Object2World[1].xyz;
  tmpvar_18[2] = _Object2World[2].xyz;
  mediump float tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_19 = tmpvar_20;
  mediump float tmpvar_21;
  tmpvar_21 = (tmpvar_19 * tmpvar_19);
  tmpvar_5.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (0.0, dot (normalize(
    (tmpvar_18 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_22;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_3.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_12;
  mediump vec3 vertexPos_13;
  vertexPos_13 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_14;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_16;
  tmpvar_16 = (_World2Object * tmpvar_15).xyz;
  objSpaceCameraPos_14 = tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_17 = normalize((objSpaceCameraPos_14 - vertexPos_13));
  viewDir_OS_2 = tmpvar_17;
  highp mat3 tmpvar_18;
  tmpvar_18[0] = _Object2World[0].xyz;
  tmpvar_18[1] = _Object2World[1].xyz;
  tmpvar_18[2] = _Object2World[2].xyz;
  mediump float tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_19 = tmpvar_20;
  mediump float tmpvar_21;
  tmpvar_21 = (tmpvar_19 * tmpvar_19);
  tmpvar_5.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (0.0, dot (normalize(
    (tmpvar_18 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_22;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_3.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_12;
  mediump vec3 vertexPos_13;
  vertexPos_13 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_14;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_16;
  tmpvar_16 = (_World2Object * tmpvar_15).xyz;
  objSpaceCameraPos_14 = tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_17 = normalize((objSpaceCameraPos_14 - vertexPos_13));
  viewDir_OS_2 = tmpvar_17;
  highp mat3 tmpvar_18;
  tmpvar_18[0] = _Object2World[0].xyz;
  tmpvar_18[1] = _Object2World[1].xyz;
  tmpvar_18[2] = _Object2World[2].xyz;
  mediump float tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_19 = tmpvar_20;
  mediump float tmpvar_21;
  tmpvar_21 = (tmpvar_19 * tmpvar_19);
  tmpvar_5.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (0.0, dot (normalize(
    (tmpvar_18 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_22;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec4 _glesColor;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
out mediump vec4 xlv_TEXCOORD0;
out lowp vec4 xlv_TEXCOORD2;
out lowp vec4 xlv_TEXCOORD4;
out lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_8;
  tmpvar_8 = min (0.0, (tmpvar_7.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_9;
  tmpvar_9 = ((tmpvar_8 * tmpvar_8) * 0.001);
  highp float tmpvar_10;
  tmpvar_10 = (max (0.0, (
    abs(tmpvar_7.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_7.x));
  pos_3.zw = tmpvar_7.zw;
  highp vec2 tmpvar_11;
  tmpvar_11.x = (_V_CW_Y_Bend_Size * tmpvar_9);
  tmpvar_11.y = ((_V_CW_X_Bend_Size * tmpvar_9) + ((
    (tmpvar_10 * tmpvar_10)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_7.xy + tmpvar_11);
  highp vec2 tmpvar_12;
  tmpvar_12 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_12;
  mediump vec3 vertexPos_13;
  vertexPos_13 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_14;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_16;
  tmpvar_16 = (_World2Object * tmpvar_15).xyz;
  objSpaceCameraPos_14 = tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_17 = normalize((objSpaceCameraPos_14 - vertexPos_13));
  viewDir_OS_2 = tmpvar_17;
  highp mat3 tmpvar_18;
  tmpvar_18[0] = _Object2World[0].xyz;
  tmpvar_18[1] = _Object2World[1].xyz;
  tmpvar_18[2] = _Object2World[2].xyz;
  mediump float tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_19 = tmpvar_20;
  mediump float tmpvar_21;
  tmpvar_21 = (tmpvar_19 * tmpvar_19);
  tmpvar_5.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = max (0.0, dot (normalize(
    (tmpvar_18 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_22;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 glstate_lightmodel_ambient;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
in mediump vec4 xlv_TEXCOORD0;
in lowp vec4 xlv_TEXCOORD2;
in lowp vec4 xlv_TEXCOORD4;
in lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (((_LightColor0.xyz * xlv_TEXCOORD4.w) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_8;
  retColor_2.xyz = (tmpvar_8 * tmpvar_6.xyz);
  mediump vec3 tmpvar_9;
  tmpvar_9 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_9;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  _glesFragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir_OS_2;
  highp vec4 pos_3;
  mediump vec4 tmpvar_4;
  lowp vec4 tmpvar_5;
  lowp vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  tmpvar_4.zw = vec2(0.0, 0.0);
  tmpvar_5.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = vec3(0.0, 0.0, 0.0);
  highp vec4 tmpvar_8;
  tmpvar_8 = (glstate_matrix_modelview0 * _glesVertex);
  highp float tmpvar_9;
  tmpvar_9 = min (0.0, (tmpvar_8.z + _V_CW_Camera_Bend_Offset));
  highp float tmpvar_10;
  tmpvar_10 = ((tmpvar_9 * tmpvar_9) * 0.001);
  highp float tmpvar_11;
  tmpvar_11 = (max (0.0, (
    abs(tmpvar_8.x)
   - _V_CW_Z_Bend_Bias)) * sign(tmpvar_8.x));
  pos_3.zw = tmpvar_8.zw;
  highp vec2 tmpvar_12;
  tmpvar_12.x = (_V_CW_Y_Bend_Size * tmpvar_10);
  tmpvar_12.y = ((_V_CW_X_Bend_Size * tmpvar_10) + ((
    (tmpvar_11 * tmpvar_11)
   * _V_CW_Z_Bend_Size) * 0.001));
  pos_3.xy = (tmpvar_8.xy + tmpvar_12);
  highp vec2 tmpvar_13;
  tmpvar_13 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.xy = tmpvar_13;
  mediump vec3 vertexPos_14;
  vertexPos_14 = tmpvar_1.xyz;
  mediump vec3 objSpaceCameraPos_15;
  highp vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_17;
  tmpvar_17 = (_World2Object * tmpvar_16).xyz;
  objSpaceCameraPos_15 = tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = normalize((objSpaceCameraPos_15 - vertexPos_14));
  viewDir_OS_2 = tmpvar_18;
  highp mat3 tmpvar_19;
  tmpvar_19[0] = _Object2World[0].xyz;
  tmpvar_19[1] = _Object2World[1].xyz;
  tmpvar_19[2] = _Object2World[2].xyz;
  mediump float tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = clamp ((dot (_glesNormal, viewDir_OS_2) + _V_CW_Rim_Bias), 0.0, 1.0);
  tmpvar_20 = tmpvar_21;
  mediump float tmpvar_22;
  tmpvar_22 = (tmpvar_20 * tmpvar_20);
  tmpvar_5.x = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (0.0, dot (normalize(
    (tmpvar_19 * _glesNormal)
  ), _WorldSpaceLightPos0.xyz));
  tmpvar_6.w = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_7 = tmpvar_24;
  gl_Position = (glstate_matrix_projection * pos_3);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD4 = tmpvar_6;
  xlv_TEXCOORD7 = tmpvar_7;
  xlv_COLOR = _glesColor;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 glstate_lightmodel_ambient;
uniform sampler2D _ShadowMapTexture;
uniform lowp vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump vec4 _LightColor0;
uniform lowp vec4 _V_CW_Rim_Color;
uniform mediump float _V_CW_Emission_Strength;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  lowp vec3 diff_1;
  lowp vec4 retColor_2;
  mediump vec4 mainTex_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mainTex_3 = tmpvar_4;
  mediump vec4 tmpvar_5;
  tmpvar_5 = (mainTex_3 * _Color);
  retColor_2 = tmpvar_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = (retColor_2 * xlv_COLOR);
  retColor_2.w = tmpvar_6.w;
  lowp float tmpvar_7;
  mediump float dist_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD7).x;
  dist_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = max (float((dist_8 > 
    (xlv_TEXCOORD7.z / xlv_TEXCOORD7.w)
  )), _LightShadowData.x);
  tmpvar_7 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (((
    (_LightColor0.xyz * xlv_TEXCOORD4.w)
   * tmpvar_7) + (glstate_lightmodel_ambient * 2.0).xyz) * 2.0);
  diff_1 = tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = (diff_1 + xlv_TEXCOORD4.xyz);
  diff_1 = tmpvar_12;
  retColor_2.xyz = (tmpvar_12 * tmpvar_6.xyz);
  mediump vec3 tmpvar_13;
  tmpvar_13 = (retColor_2.xyz + ((tmpvar_6.xyz * mainTex_3.w) * _V_CW_Emission_Strength));
  retColor_2.xyz = tmpvar_13;
  retColor_2.xyz = mix (_V_CW_Rim_Color.xyz, retColor_2.xyz, xlv_TEXCOORD2.xxx);
  gl_FragData[0] = retColor_2;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_ON" "V_CW_LIGHT_PER_VERTEX" "V_CW_FOG_OFF" "V_CW_IBL_OFF" "V_CW_VERTEX_COLOR_ON" "V_CW_RIM_ON" "V_CW_SELF_ILLUMINATED_ON" "V_CW_UNITY_VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesColor;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 glstate_matrix_projection;
uniform mediump vec4 _MainTex_ST;
uniform highp float _V_CW_X_Bend_Size;
uniform highp float _V_CW_Y_Bend_Size;
uniform highp float _V_CW_Z_Bend_Size;
uniform highp float _V_CW_Z_Bend_Bias;
uniform highp float _V_CW_Camera_Bend_Offset;
uniform lowp float _V_CW_Rim_Bias;
varying mediump vec4 xlv_TEXCOORD0;
varying lowp vec4 xlv_TEXCOORD2;
varying lowp vec4 xlv_TEXCOORD4;
varying mediump vec4 xlv_TEXCOORD7;
varying lowp vec4 xlv_COLOR;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1 = _glesVertex;
  highp vec3 viewDir